[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"0\",\"1\":\"0#converting-adoc-to-html\",\"2\":\"1\",\"3\":\"1#obligatory-diagram\",\"4\":\"1#main\",\"5\":\"1#event-loop\",\"6\":\"1#processing-loop\",\"7\":\"1#tcp-server\",\"8\":\"1#layout\",\"9\":\"1#os-specific-code\",\"10\":\"2\",\"11\":\"2#supported-key-symbols\",\"12\":\"3\",\"13\":\"4\",\"14\":\"4#benefits-of-kmonad-over-kanata\",\"15\":\"4#why-i-built-and-use-kanata\",\"16\":\"5\",\"17\":\"5#configuration-guide\",\"18\":\"5#changelog-since-todo-previous-version-here\",\"19\":\"5#sample-configuration-file\",\"20\":\"5#windows\",\"21\":\"5#linux\",\"22\":\"5#macos\",\"23\":\"5#instructions-for-macos-11-and-newer\",\"24\":\"5#old-instructions-for-macos-11-and-newer\",\"25\":\"5#install-karabiner-driver-for-macos-10-and-older\",\"26\":\"5#after-installing-the-appropriate-driver-for-your-os-both-macos-10-and-11\",\"27\":\"5#add-permissions\",\"28\":\"5#cmd-allowed-variants\",\"29\":\"5#wintercept-variants\",\"30\":\"5#warning-known-issue\",\"31\":\"5#description\",\"32\":\"5#steps-to-install-the-driver\",\"33\":\"5#additional-installation-steps\",\"34\":\"5#kanata-passthru-dll\",\"35\":\"5#sha256-checksums\",\"36\":\"6\",\"37\":\"6#preface\",\"38\":\"6#motivation\",\"39\":\"6#an-exploration-of-an-idea-track-releases\",\"40\":\"6#a-different-idea-modify-presses-held-with-mod-keys\",\"41\":\"6#backwards-compatibility\",\"42\":\"6#data-format-examples\",\"43\":\"6#backwards-compatibility-revisited\",\"44\":\"7\",\"45\":\"7#_1-if-the-uinput-group-does-not-exist-create-a-new-group\",\"46\":\"7#_2-add-your-user-to-the-input-and-the-uinput-group\",\"47\":\"7#_3-make-sure-the-uinput-device-file-has-the-right-permissions\",\"48\":\"7#create-a-new-file\",\"49\":\"7#insert-the-following-in-the-code\",\"50\":\"7#machine-reboot-or-run-this-to-reload\",\"51\":\"7#verify-settings-by-following-command\",\"52\":\"7#output\",\"53\":\"7#_4-make-sure-the-uinput-drivers-are-loaded\",\"54\":\"7#_5a-to-create-and-enable-a-systemd-daemon-service\",\"55\":\"7#_5b-to-create-and-enable-an-openrc-daemon-service\",\"56\":\"8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[4,20],\"2\":[2],\"3\":[2],\"4\":[1,6],\"5\":[2,9],\"6\":[2,34],\"7\":[2,17],\"8\":[1,29],\"9\":[3,26],\"10\":[1],\"11\":[3,180],\"12\":[5,103],\"13\":[3,10],\"14\":[5,8],\"15\":[6,117],\"16\":[1],\"17\":[2,12],\"18\":[7,7],\"19\":[3,30],\"20\":[1,143],\"21\":[1,65],\"22\":[1,9],\"23\":[6,21],\"24\":[7,53],\"25\":[9,6],\"26\":[14,43],\"27\":[2,19],\"28\":[3,45],\"29\":[2,3],\"30\":[3,34],\"31\":[1,40],\"32\":[5,17],\"33\":[3,73],\"34\":[3,69],\"35\":[2,5],\"36\":[4],\"37\":[1,53],\"38\":[1,58],\"39\":[8,72],\"40\":[10,87],\"41\":[3,82],\"42\":[3,160],\"43\":[3,87],\"44\":[1,28],\"45\":[11,3],\"46\":[10,23],\"47\":[11],\"48\":[5,7],\"49\":[5,9],\"50\":[7,6],\"51\":[6,4],\"52\":[2,7],\"53\":[8,18],\"54\":[9,141],\"55\":[9,74],\"56\":[1,3]},\"averageFieldLength\":[4.157894736842104,40.84266206295882],\"storedFields\":{\"0\":{\"h\":\"\"},\"1\":{\"h\":\"Converting \\\".adoc\\\" to html\",\"t\":[\"To generate html from the these documentation files, use \\\"asciidoctor\\\" (they are not fully compatible with the separate \\\"asciidoc\\\" project)\"]},\"2\":{\"h\":\"Design doc\"},\"3\":{\"h\":\"Obligatory diagram\"},\"4\":{\"h\":\"main\",\"t\":[\"read args\",\"read config\",\"start event loops\"]},\"5\":{\"h\":\"event loop\",\"t\":[\"read key events\",\"send events to processing loop on channel\"]},\"6\":{\"h\":\"processing loop\",\"t\":[\"check for events on mpsc\",\"if event: send event to layout\",\"tick() the keyberon layout, send any events needed\",\"if no event: sleep for 1ms\",\"separate monotonic time checks, because can't rely on sleep to be fine-grained or accurate\",\"send ServerMessages to the TCP server\"]},\"7\":{\"h\":\"TCP server\",\"t\":[\"listen for ClientMessages and act on them\",\"recv ServerMessages from processing loop and forward to all connected clients\"]},\"8\":{\"h\":\"layout\",\"t\":[\"uses keyberon\",\"indices of kanata_keyberon::layout::Event::{Press, Release}(x,y):\",\"x = 0 or 1 (0 is for physical key presses, 1 is for fake keys) y = OS code of key used as an index \"]},\"9\":{\"h\":\"OS-specific code\",\"t\":[\"Most of the OS specific code is in oskbd/ and keys/. There's a bit of it inkanata/ since the event loops to receive OS events are different.\"]},\"10\":{\"h\":\"\"},\"11\":{\"h\":\"Supported key symbols\",\"t\":[\"Symbol(s)[^1]\",\"Key name\",\"‹x x›\",\"Left/Right modifiers (e.g., ‹⎈ LCtrl)\",\"⇧\",\"Shift\",\"⎈ ⌃\",\"Control\",\"⌘ ◆ ❖\",\"Windows/Command\",\"⎇ ⌥\",\"Alt\",\"⇪\",\"capslock\",\"⎋\",\"escape\",\"⭾ ↹\",\"tab\",\"␠ ␣\",\"spc spacebar\",\"␈ ⌫\",\"bspc backspace (delete backward)\",\"␡ ⌦\",\"del delete forward\",\"⏎ ↩ ⌤ ␤\",\"ret return or enter\",\"︔ ⸴ ．⁄\",\"semicolon ; / comma , / period . / slash /\",\"⧵ ＼\",\"backslash \\\\\",\"﹨ <\",\"non_us_backslash\",\"【 「 〔 ⎡\",\"open_bracket\",\"】 」 〕 ⎣\",\"close_bracket\",\"ˋ ˜\",\"grave_accent_and_tilde\",\"‐ ₌\",\"hyphenequal_sign\",\"▲ ▼ ◀ ▶\",\"up/down/left/right (arrows)\",\"⇞ ⇟\",\"pgup/pgdn (page up, page down)\",\"⎀\",\"insert\",\"⇤ ⤒ ↖\",\"home\",\"⇥ ⤓ ↘\",\"end\",\"⇭\",\"numlock\",\"🔢₁ 🔢₂ 🔢₃ 🔢₄ 🔢₅\",\"keypad_1–5\",\"🔢₆ 🔢₇ 🔢₈ 🔢₉ 🔢₀\",\"keypad_6–0\",\"🔢₋ 🔢₌ 🔢₊\",\"keypad_hyphen/equal_sign/plus\",\"🔢⁄ 🔢．🔢∗\",\"keypad_slash/period/asterisk\",\"◀◀ ▶⏸ ▶▶\",\"vk_consumer_previous/play/next\",\"🔊 🔈+ or ➕₊⊕\",\"volume_up\",\"🔉 🔈− or ➖₋⊖\",\"volume_down\",\"🔇 🔈⓪ or ⓿ ₀\",\"mute\",\"🔆 🔅\",\"vk_consumer_brightness_up/down\",\"⌨💡+ or ➕₊⊕\",\"vk_consumer_illumination_up\",\"⌨💡− or ➖₋⊖\",\"vk_consumer_illumination_down\",\"🎛\",\"vk_dashboard\",\"▤ ☰ 𝌆\",\"application\",\"🖰1 🖰2 ... 🖰5\",\"button1–5\",\"‹🖰 🖰›\",\"button12\",\"[^1]: space-separated list of keys; or means only last symbol in a pair changes\"]},\"12\":{\"h\":\"Windows Interception driver implementation notes\",\"t\":[\"Interception handle is !Send and !Sync\",\"means a single thread should own both input and output\",\"KbdOut will need to send keyboard output events to that thread as opposed to Linux using uinput and the original Windows code using SendInput which are independent of the input devices.\",\"Maybe save channel in kanata struct as part of new kanata\",\"Interception can filter for only keyboard events \",\"should use this filter feature; don't want to intercept mouse\",\"Need to save previous device for sending to, in case wait/receive (with timeout) don't return anything so that sending stuff can be sent to some device.\",\"Input ScanCode maps to the keyberon KeyCode; they both use the USB standard codes. \",\"For ease of integration will probably need to unfortunately convert it to an OsCode even though the processing loop will soon after just convert it back to KeyCode. Oh well.\"]},\"13\":{\"h\":\"Comparison with kmonad\",\"t\":[\"The kmonad project is the closest alternative for this project.\"]},\"14\":{\"h\":\"Benefits of kmonad over kanata\",\"t\":[\"~MacOS support~ (this is implemented now)\",\"Different features\"]},\"15\":{\"h\":\"Why I built and use kanata\",\"t\":[\"Double-tapping a tap-hold key did not behavehow I want it to\",\"Some key sequences with tap-hold keys didn't behave how I want: \",\"(press lsft) (press a) (release lsft) (release a) (a is a tap-hold key)\",\"The above outputs a in kmonad, but I want it to output A\",\"kmonad was missing mouse buttons\",\"The issues listed are all fixable in kmonad and I hope they are one day! For me though, I didn't and still don't know Haskell well enough to contribute to kmonad. That's why I instead built kanata based off of the excellent work that had already gone into thekeyberon,ktrl, andkbremap projects.\",\"If you want to see the features that kanata offers, theconfiguration guide is a good starting point.\",\"I dogfood kanata myself and it works great for my use cases. Though kanata is a younger project than kmonad, it now has more features. If you give kanata a try, feel free to ask for help in an issue or discussion, or let me know how it went 🙂.\"]},\"16\":{\"h\":\"\"},\"17\":{\"h\":\"Configuration guide\",\"t\":[\"Link to the appropriate configuration guide version: guide link TODO: FIX LINK.\"]},\"18\":{\"h\":\"Changelog (since <TODO: previous_version_here>)\",\"t\":[\"Change log * TODO: fill this out \"]},\"19\":{\"h\":\"Sample configuration file\",\"t\":[\"The attached kanata.kbd file is tested to work with the current version. The one in the main branch of the repository may have extra features that are not supported in this release.\"]},\"20\":{\"h\":\"Windows\",\"t\":[\"Instructions\",\"NOTE: All Windows binaries are compiled for x86-64 architectures only.\",\"Download kanata.exe. Optionally, download kanata.kbd. With the two files in the same directory, you can double-click the exe to start kanata. Kanata does not start a background process, so the window needs to stay open after startup. See this discussion for tips to run kanata in the background.\",\"You need to run kanata.exe via cmd or powershell to use a different configuration file:\",\"kanata.exe --cfg <cfg_file>\",\"NOTE: The kanata_winIOv2.exe variant contains an experimental breaking change that fixes an issue where the Windows LLHOOK+SendInput version of kanata does not handle defsrc consistently compared to other versions and other operating systems. This variant will be of interest to you for any of the following reasons:\",\"you are a new user\",\"you are a cross-platform user\",\"you use multiple language layouts within Windows and want kanata to handle the key positions consistently\",\"This variant contains the same output change as in the scancode variant below, and also changes the input to also operate on scancodes.\",\"NOTE: The kanata_legacy_output.exe variant has the same input defsrc handling as the standard kanata.exe file. It uses the same output mechanism as the standard kanata.exe variant in version 1.6.1 and earlier. In other words the formerly experimental_scancode variant is now the default binary. The non-legacy variants contain changes for an issue; the fix is omitted from this legacy variant. The legacy variant is included in case issues are found with the new output mechanism.\"]},\"21\":{\"h\":\"Linux\",\"t\":[\"Instructions\",\"NOTE: All Linux binaries are compiled for x86 architectures only.\",\"Download kanata.\",\"Run it in a terminal and point it to a valid configuration file. Kanata does not start a background process, so the window needs to stay open after startup. See this discussion for how to set up kanata with systemd.\",\"chmod +x kanata # may be downloaded without executable permissions sudo ./kanata --cfg <cfg_file>`\",\"To avoid requiring sudo, follow the instructions here.\"]},\"22\":{\"h\":\"macOS\",\"t\":[\"Instructions\",\"WARNING: feature support on macOS is limited.\"]},\"23\":{\"h\":\"Instructions for macOS 11 and newer\",\"t\":[\"Please read through this issue comment:\",\"https://github.com/jtroo/kanata/issues/1264#issuecomment-2763085239\",\"Also have a read through this discussion:\",\"https://github.com/jtroo/kanata/discussions/1537\"]},\"24\":{\"h\":\"Old instructions for macOS 11 and newer\",\"t\":[\"Click to expand\",\"First install Karabiner driver for macOS 11 and newer:\",\"Install the V5 Karabiner VirtualHiDDevice Driver.\",\"To activate it:\",\"sudo /Applications/.Karabiner-VirtualHIDDevice-Manager.app/Contents/MacOS/Karabiner-VirtualHIDDevice-Manager activate\",\"Then you need to run the daemon. You should run this in the background somehow or leave the terminal window where you run this command open.\",\"sudo '/Library/Application Support/org.pqrs/Karabiner-DriverKit-VirtualHIDDevice/Applications/Karabiner-VirtualHIDDevice-Daemon.app/Contents/MacOS/Karabiner-VirtualHIDDevice-Daemon'\"]},\"25\":{\"h\":\"Install Karabiner driver for macOS 10 and older:\",\"t\":[\"Install the Karabiner kernel extension.\"]},\"26\":{\"h\":\"After installing the appropriate driver for your OS (both macOS <=10 and >=11)\",\"t\":[\"Download a kanata_macos variant.\",\"Run it in a terminal and point it to a valid configuration file. Kanata does not start a background process, so the window needs to stay open after startup.\",\"Example\",\"chmod +x kanata_macos_arm64 # may be downloaded without executable permissions sudo ./kanata_macos_arm64 --cfg <cfg_file>`\"]},\"27\":{\"h\":\"Add permissions\",\"t\":[\"If Kanata is not behaving correctly, you may need to add permissions. Please see this issue: link to macOS permissions issue.\"]},\"28\":{\"h\":\"cmd_allowed variants\",\"t\":[\"Explanation\",\"The binaries with the name cmd_allowed are conditionally compiled with the cmd action enabled.\",\"Using the regular binaries, there is no way to get the cmd action to work. This action is restricted behind conditional compilation because I consider the action to be a security risk that should be explicitly opted into and completely forbidden by default.\"]},\"29\":{\"h\":\"wintercept variants\",\"t\":[\"Explanation and instructions\"]},\"30\":{\"h\":\"Warning: known issue\",\"t\":[\"This issue in the Interception driver exists: https://github.com/oblitum/Interception/issues/25. This will affect you if you put your PC to sleep instead of shutting it down, or if you frequently plug/unplug USB devices.\"]},\"31\":{\"h\":\"Description\",\"t\":[\"These variants use the Interception driver instead of Windows hooks. You will need to install the driver using the release or from the copy in this repo. The benefit of using this driver is that it is a lower-level mechanism than Windows hooks. This means kanata will work in more applications.\"]},\"32\":{\"h\":\"Steps to install the driver\",\"t\":[\"extract the .zip\",\"run a shell with administrator privilege\",\"run the script \\\"command line installer/install-interception.exe\\\"\",\"reboot\"]},\"33\":{\"h\":\"Additional installation steps\",\"t\":[\"The above steps are those recommended by the interception driver author. However, I have found that those steps work inconsistently and sometimes the dll stops being able to be loaded. I think it has something to do with being installed in the privileged location of system32\\\\drivers.\",\"To help with the dll issue, you can copy the following file in the zip archive to the directory that kanata starts from: Interception\\\\library\\\\x64\\\\interception.dll.\",\"E.g. if you start kanata from your Documents folder, put the file there:\",\"C:\\\\Users\\\\my_user\\\\Documents\\\\ kanata_wintercept.exe kanata.kbd interception.dll\"]},\"34\":{\"h\":\"kanata_passthru.dll\",\"t\":[\"Explanation and instructions\",\"The Windows kanata_passthru.dll file allows using Kanata as a library within AutoHotkey to avoid conflicts between keyboard hooks installed by both. You can channel keyboard input events received by AutoHotkey into Kanata's keyboard engine and get the transformed keyboard output events (per your Kanata config) that AutoHotkey can then send to the OS.\",\"To make use of this, download kanata_passthru.dll, then the simulated_passthru_ahk folder with a brief example, place the dll there, open kanata_passthru.ahk to read what the example does and then double-click to launch it.\"]},\"35\":{\"h\":\"sha256 checksums\",\"t\":[\"Sums\",\"TODO: fill this out\"]},\"36\":{\"h\":\"Sequence improvement: sequence chords\"},\"37\":{\"h\":\"Preface\",\"t\":[\"This document is a record of designing/braindumping for the improvement to the sequences feature to add chord support. It is left in an informal and disorganized state — as opposed to a being presentable design doc — out of laziness. Apologies ahead of time if you read this and it's hard to follow, feel free to contribute a PR to create a new and more polished doc.\"]},\"38\":{\"h\":\"Motivation\",\"t\":[\"The desire is to be able to add output chords to a sequence. The effect of this is that: (S-(a b)) can be differentiated from (S-a b). Today, chords are not supported at all. The two sequences above could be written as (lsft a b); however, the code today has no way to decide the difference between lsft being applied to only a or to both a and b.\",\"The feature will codenamed \\\"seqchords\\\" for brevity in this document.\"]},\"39\":{\"h\":\"An exploration of an idea: track releases?\",\"t\":[\"Today, the sequence (lsft a b c) doesn't care when the lsft, or even a or b are released relative to when the subsequent keys are pressed. However, with seqchords, the code could be potentially changed to make sequences release-aware.\",\"It seems a little difficult to integrate this into the trie structure used to track sequences though. With an implementation that is release-aware, it seems like the code would need to figure out how to conditionally add release events to the trie, depending if the seq was(lsft a) or (S-a)\",\"For now, I think a different approach would be better.\"]},\"40\":{\"h\":\"A different idea: modify presses held with mod keys.\",\"t\":[\"The current sequence type is Vec<u16> since keys don't fit into u8. However, there are fewer than 1024 (2^10) keys total. That means there are 6 bits to play with. 6 bits are enough for the types of modifiers (of which there are 4), but differentiating both sides (increases to 8). Perhaps one only cares to use both left and right shifts though, and maybe both left and right alts. One could also use a u32 instead, but that seems unnecessary for now. I see no backwards compatibility issues if one desired that change in the future.\",\"With this in mind, while modifiers are held, set the upper unused bits of the stored u16 values.\"]},\"41\":{\"h\":\"Backwards compatibility?\",\"t\":[\"This does mean that (lsft a b) behaves differently with vs. without seqchords. Unless maybe the code automatically generates the various permutations of this type of sequence, but that seems complicated. Or maybe have a u16 with a special bit pattern that could be used to differentiate between (S-(a b)) and (lsft a b). For now, let's say that the bit pattern is 0xFFFF. If a modifier is pressed and the sequence [..., <mod>, 0xFFFF] exists in the trie: continue processing the sequence in mod-aware mode.\",\"OR for simplicity, just say \\\"screw backwards compatibility\\\" and force users to be clear about what they mean and define the extra permutations, if they want them. I prefer this.\"]},\"42\":{\"h\":\"Data format examples\",\"t\":[\"Let's begin the description of the new data format. Since shifted keys seem like they will be the main use case for seqchords, only that will be described in this document for now. Here are the numerical key values relevant to the examples.\",\"a: 0x001E\",\"b: 0x0030.\",\"lsft: 0x002A.\",\"This differs by OS, but that's not important.\",\"The transformation of (lsft a b) to a sequence in the trie today looks like:\",\"[0x002A, 0x001E, 0x0030]\",\"This will remain unchanged with seqchords. Let's say that chorded keys using lsft will have the otherwise-unused MSB (bit 15) set.\",\"The transformation of some sequences using chords will be:\",\"(S-(a b)) => [0x802A, 0x801E, 0x8030]\",\" (S-a b) => [0x802A, 0x801E, 0x0030]\",\"(S-a S-b) => [0x802A, 0x801E, 0x802A, 0x8030]\",\"Notably, lsft is modifying its own upper bits. This should simplify the implementation logic so that the code does not need to add a special-case check that the newly-pressed key is itself a modifier.\",\"One may need to define different sequences if one wishes to use both left and right shifts to be able to trigger these shifted sequences. The syntax does not exist today, but maybe (S-(a b)) and (RS-(a b)) as an example for left and right shifts. The reason different sequences would be required is because the sequence->trie check operates on the integers that correspond to the keycodes.\",\"Consideration: maybe there could be transformations for the right modifier keys to ensure they get translated to the left modifier keys. This seems like it could be a sensible default to start with. If a change is desired in the future to not do this transformation, it doesn't seem too difficult to add a configuration item to do so. For now that will be left out, deferring to the YAGNI principle.\"]},\"43\":{\"h\":\"Backwards compatibility revisited\",\"t\":[\"Thinking back on the topic of backwards compatibility, I'm scrapping that idea of special bit patterns. I thought of a probably-better way: backtracking with modifier cancellation.\",\"By default when seqchords gets added, the modified bit patterns will be used to check in the trie for valid sequences. However, with a defcfg item sequence-backtrack-modcancel — which should be yes by default for back-compat reasons — if the code encounters an invalid sequence with the modded bit pattern, it will try again with the unmodded bit pattern, and only if that does not match will sequence-mode end with an invalid termination. This backtracking can be turned off if desired, e.g. if it behaves badly in some future seqchords use cases.\"]},\"44\":{\"h\":\"Instructions\",\"t\":[\"In Linux, kanata needs to be able to access the input and uinput subsystem to inject events. To do this, your user needs to have permissions. Follow the steps in this page to obtain user permissions.\"]},\"45\":{\"h\":\"1. If the uinput group does not exist, create a new group\",\"t\":[\"sudo groupadd uinput\"]},\"46\":{\"h\":\"2. Add your user to the input and the uinput group\",\"t\":[\"sudo usermod -aG input $USER sudo usermod -aG uinput $USER\",\"Make sure that it's effective by running groups. You might have to logout and login.\"]},\"47\":{\"h\":\"3. Make sure the uinput device file has the right permissions.\"},\"48\":{\"h\":\"Create a new file:\",\"t\":[\"/etc/udev/rules.d/99-input.rules\"]},\"49\":{\"h\":\"Insert the following in the code\",\"t\":[\"KERNEL==\\\"uinput\\\", MODE=\\\"0660\\\", GROUP=\\\"uinput\\\", OPTIONS+=\\\"static_node=uinput\\\"\"]},\"50\":{\"h\":\"Machine reboot or run this to reload\",\"t\":[\"sudo udevadm control --reload-rules && sudo udevadm trigger\"]},\"51\":{\"h\":\"Verify settings by following command:\",\"t\":[\"ls -l /dev/uinput\"]},\"52\":{\"h\":\"Output:\",\"t\":[\"crw-rw---- 1 root date uinput /dev/uinput\"]},\"53\":{\"h\":\"4. Make sure the uinput drivers are loaded\",\"t\":[\"You may need to run this command whenever you start kanata for the first time:\",\"sudo modprobe uinput\"]},\"54\":{\"h\":\"5a. To create and enable a systemd daemon service\",\"t\":[\"Run this command first:\",\"mkdir -p ~/.config/systemd/user\",\"Then add this to: ~/.config/systemd/user/kanata.service:\",\"[Unit] Description=Kanata keyboard remapper Documentation=https://github.com/jtroo/kanata [Service] Environment=PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin # Uncomment the 4 lines beneath this to increase process priority # of Kanata in case you encounter lagginess when resource constrained. # WARNING: doing so will require the service to run as an elevated user such as root. # Implementing least privilege access is an exercise left to the reader. # # CPUSchedulingPolicy=rr # CPUSchedulingPriority=99 # IOSchedulingClass=realtime # Nice=-20 Type=simple ExecStart=/usr/bin/sh -c 'exec $$(which kanata) --cfg $${HOME}/.config/kanata/config.kbd' Restart=no [Install] WantedBy=default.target\",\"Make sure to update the executable location for sh in the snippet above. This would be the line starting with ExecStart=/usr/bin/sh -c. You can check the executable path with:\",\"which sh\",\"Also, verify if the path to kanata is included in the line Environment=PATH=[...]. For example, if executing which kanata returns /home/[user]/.cargo/bin/kanata, the PATH line should be appended with /home/[user]/.cargo/bin or :%h/.cargo/bin.%h is one of the specifiers allowed in systemd, more can be found in https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#Specifiers\",\"Then run:\",\"systemctl --user daemon-reload systemctl --user enable kanata.service systemctl --user start kanata.service systemctl --user status kanata.service # check whether the service is running\"]},\"55\":{\"h\":\"5b. To create and enable an OpenRC daemon service\",\"t\":[\"Edit new file /etc/init.d/kanata as root, replacing <username> as appropriate:\",\"#!/sbin/openrc-run command=\\\"/home/<username>/.cargo/bin/kanata\\\" #command_args=\\\"--config=/home/<username>/.config/kanata/kanata.kbd\\\" command_background=true pidfile=\\\"/run/${RC_SVCNAME}.pid\\\" command_user=\\\"<username>\\\"\",\"Then run:\",\"sudo chmod +x /etc/init.d/kanata # script must be executable sudo rc-service kanata start rc-status # check that kanata isn't listed as [ crashed ] sudo rc-update add kanata default # start the service automatically at boot\",\"The original text was taken and adapted from: https://github.com/kmonad/kmonad/blob/master/doc/faq.md#linux\"]},\"56\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"$\",{\"1\":{\"55\":1}}],[\"$$\",{\"1\":{\"54\":2}}],[\"$user\",{\"1\":{\"46\":2}}],[\"~\",{\"1\":{\"54\":2}}],[\"~macos\",{\"1\":{\"14\":1}}],[\"99\",{\"1\":{\"48\":1}}],[\"3\",{\"0\":{\"47\":1}}],[\">trie\",{\"1\":{\"42\":1}}],[\">=11\",{\"0\":{\"26\":1}}],[\"8\",{\"1\":{\"40\":1}}],[\"404\",{\"1\":{\"56\":1}}],[\"4\",{\"0\":{\"53\":1},\"1\":{\"40\":1,\"54\":1}}],[\"zip\",{\"1\":{\"32\":1,\"33\":1}}],[\"20\",{\"1\":{\"54\":1}}],[\"2\",{\"0\":{\"46\":1}}],[\"2^10\",{\"1\":{\"40\":1}}],[\"25\",{\"1\":{\"30\":1}}],[\"2763085239\",{\"1\":{\"23\":1}}],[\"jtroo\",{\"1\":{\"23\":2,\"54\":1}}],[\"just\",{\"1\":{\"12\":1,\"41\":1}}],[\"+x\",{\"1\":{\"21\":1,\"26\":1,\"55\":1}}],[\"www\",{\"1\":{\"54\":1}}],[\"would\",{\"1\":{\"39\":2,\"42\":1,\"54\":1}}],[\"words\",{\"1\":{\"20\":1}}],[\"works\",{\"1\":{\"15\":1}}],[\"work\",{\"1\":{\"15\":1,\"19\":1,\"28\":1,\"31\":1,\"33\":1}}],[\"written\",{\"1\":{\"38\":1}}],[\"went\",{\"1\":{\"15\":1}}],[\"well\",{\"1\":{\"12\":1,\"15\":1}}],[\"while\",{\"1\":{\"40\":1}}],[\"which\",{\"1\":{\"12\":1,\"40\":1,\"43\":1,\"54\":3}}],[\"whether\",{\"1\":{\"54\":1}}],[\"whenever\",{\"1\":{\"53\":1}}],[\"when\",{\"1\":{\"39\":2,\"43\":1,\"54\":1}}],[\"where\",{\"1\":{\"20\":1,\"24\":1}}],[\"what\",{\"1\":{\"34\":1,\"41\":1}}],[\"why\",{\"0\":{\"15\":1},\"1\":{\"15\":1}}],[\"way\",{\"1\":{\"28\":1,\"38\":1,\"43\":1}}],[\"warning\",{\"0\":{\"30\":1},\"1\":{\"22\":1,\"54\":1}}],[\"was\",{\"1\":{\"15\":1,\"39\":1,\"55\":1}}],[\"wait\",{\"1\":{\"12\":1}}],[\"wantedby=default\",{\"1\":{\"54\":1}}],[\"want\",{\"1\":{\"12\":1,\"15\":4,\"20\":1,\"41\":1}}],[\"wishes\",{\"1\":{\"42\":1}}],[\"wintercept\",{\"0\":{\"29\":1},\"1\":{\"33\":1}}],[\"winiov2\",{\"1\":{\"20\":1}}],[\"window\",{\"1\":{\"20\":1,\"21\":1,\"24\":1,\"26\":1}}],[\"windows\",{\"0\":{\"12\":1,\"20\":1},\"1\":{\"11\":1,\"12\":1,\"20\":3,\"31\":2,\"34\":1}}],[\"will\",{\"1\":{\"12\":3,\"20\":1,\"30\":1,\"31\":2,\"38\":1,\"42\":6,\"43\":3,\"54\":1}}],[\"without\",{\"1\":{\"21\":1,\"26\":1,\"41\":1}}],[\"within\",{\"1\":{\"20\":1,\"34\":1}}],[\"with\",{\"0\":{\"13\":1,\"40\":1},\"1\":{\"1\":1,\"12\":1,\"15\":1,\"19\":1,\"20\":2,\"21\":1,\"28\":2,\"32\":1,\"33\":2,\"34\":1,\"39\":2,\"40\":2,\"41\":2,\"42\":2,\"43\":5,\"54\":3}}],[\"𝌆\",{\"1\":{\"11\":1}}],[\"☰\",{\"1\":{\"11\":1}}],[\"▤\",{\"1\":{\"11\":1}}],[\"🎛\",{\"1\":{\"11\":1}}],[\"⌨💡−\",{\"1\":{\"11\":1}}],[\"⌨💡+\",{\"1\":{\"11\":1}}],[\"₀\",{\"1\":{\"11\":1}}],[\"⓿\",{\"1\":{\"11\":1}}],[\"➖₋⊖\",{\"1\":{\"11\":2}}],[\"vs\",{\"1\":{\"41\":1}}],[\"verify\",{\"0\":{\"51\":1},\"1\":{\"54\":1}}],[\"versions\",{\"1\":{\"20\":1}}],[\"version\",{\"0\":{\"18\":1},\"1\":{\"17\":1,\"19\":1,\"20\":2}}],[\"vec<u16>\",{\"1\":{\"40\":1}}],[\"virtualhiddevice\",{\"1\":{\"24\":6}}],[\"via\",{\"1\":{\"20\":1}}],[\"v5\",{\"1\":{\"24\":1}}],[\"various\",{\"1\":{\"41\":1}}],[\"variants\",{\"0\":{\"28\":1,\"29\":1},\"1\":{\"20\":1,\"31\":1}}],[\"variant\",{\"1\":{\"20\":9,\"26\":1}}],[\"values\",{\"1\":{\"40\":1,\"42\":1}}],[\"valid\",{\"1\":{\"21\":1,\"26\":1,\"43\":1}}],[\"volume\",{\"1\":{\"11\":2}}],[\"vk\",{\"1\":{\"11\":5}}],[\"➕₊⊕\",{\"1\":{\"11\":2}}],[\"🙂\",{\"1\":{\"15\":1}}],[\"🖰\",{\"1\":{\"11\":2}}],[\"🖰5\",{\"1\":{\"11\":1}}],[\"🖰2\",{\"1\":{\"11\":1}}],[\"🖰1\",{\"1\":{\"11\":1}}],[\"🔅\",{\"1\":{\"11\":1}}],[\"🔆\",{\"1\":{\"11\":1}}],[\"🔇\",{\"1\":{\"11\":1}}],[\"🔈⓪\",{\"1\":{\"11\":1}}],[\"🔈−\",{\"1\":{\"11\":1}}],[\"🔈+\",{\"1\":{\"11\":1}}],[\"🔉\",{\"1\":{\"11\":1}}],[\"🔊\",{\"1\":{\"11\":1}}],[\"🔢∗\",{\"1\":{\"11\":1}}],[\"🔢\",{\"1\":{\"11\":1}}],[\"🔢⁄\",{\"1\":{\"11\":1}}],[\"🔢₊\",{\"1\":{\"11\":1}}],[\"🔢₌\",{\"1\":{\"11\":1}}],[\"🔢₋\",{\"1\":{\"11\":1}}],[\"🔢₀\",{\"1\":{\"11\":1}}],[\"🔢₉\",{\"1\":{\"11\":1}}],[\"🔢₈\",{\"1\":{\"11\":1}}],[\"🔢₇\",{\"1\":{\"11\":1}}],[\"🔢₆\",{\"1\":{\"11\":1}}],[\"🔢₅\",{\"1\":{\"11\":1}}],[\"🔢₄\",{\"1\":{\"11\":1}}],[\"🔢₃\",{\"1\":{\"11\":1}}],[\"🔢₂\",{\"1\":{\"11\":1}}],[\"🔢₁\",{\"1\":{\"11\":1}}],[\"64\",{\"1\":{\"20\":1}}],[\"6\",{\"1\":{\"11\":1,\"20\":1,\"40\":2}}],[\"5b\",{\"0\":{\"55\":1}}],[\"5a\",{\"0\":{\"54\":1}}],[\"5\",{\"1\":{\"11\":2}}],[\"⇭\",{\"1\":{\"11\":1}}],[\"↘\",{\"1\":{\"11\":1}}],[\"⤓\",{\"1\":{\"11\":1}}],[\"⇥\",{\"1\":{\"11\":1}}],[\"↖\",{\"1\":{\"11\":1}}],[\"⤒\",{\"1\":{\"11\":1}}],[\"⇤\",{\"1\":{\"11\":1}}],[\"⎀\",{\"1\":{\"11\":1}}],[\"⇟\",{\"1\":{\"11\":1}}],[\"⇞\",{\"1\":{\"11\":1}}],[\"udevadm\",{\"1\":{\"50\":2}}],[\"udev\",{\"1\":{\"48\":1}}],[\"u16\",{\"1\":{\"40\":1,\"41\":1}}],[\"u32\",{\"1\":{\"40\":1}}],[\"u8\",{\"1\":{\"40\":1}}],[\"uncomment\",{\"1\":{\"54\":1}}],[\"unchanged\",{\"1\":{\"42\":1}}],[\"unit\",{\"1\":{\"54\":2}}],[\"unmodded\",{\"1\":{\"43\":1}}],[\"unless\",{\"1\":{\"41\":1}}],[\"unused\",{\"1\":{\"40\":1,\"42\":1}}],[\"unnecessary\",{\"1\":{\"40\":1}}],[\"unplug\",{\"1\":{\"30\":1}}],[\"unfortunately\",{\"1\":{\"12\":1}}],[\"uinput\",{\"0\":{\"45\":1,\"46\":1,\"47\":1,\"53\":1},\"1\":{\"12\":1,\"44\":1,\"45\":1,\"46\":1,\"49\":2,\"51\":1,\"52\":2,\"53\":1}}],[\"update\",{\"1\":{\"54\":1,\"55\":1}}],[\"upper\",{\"1\":{\"40\":1,\"42\":1}}],[\"up\",{\"1\":{\"11\":5,\"21\":1}}],[\"usr\",{\"1\":{\"54\":5}}],[\"usb\",{\"1\":{\"12\":1,\"30\":1}}],[\"using\",{\"1\":{\"12\":2,\"28\":1,\"31\":2,\"34\":1,\"42\":2}}],[\"us\",{\"1\":{\"11\":1}}],[\"user=\",{\"1\":{\"55\":1}}],[\"usermod\",{\"1\":{\"46\":2}}],[\"users\",{\"1\":{\"33\":1,\"41\":1}}],[\"user\",{\"0\":{\"46\":1},\"1\":{\"20\":2,\"33\":1,\"44\":2,\"54\":9}}],[\"used\",{\"1\":{\"8\":1,\"39\":1,\"41\":1,\"43\":1}}],[\"uses\",{\"1\":{\"8\":1,\"20\":1}}],[\"use\",{\"0\":{\"15\":1},\"1\":{\"1\":1,\"12\":2,\"15\":1,\"20\":2,\"31\":1,\"34\":1,\"40\":2,\"42\":2,\"43\":1}}],[\"▶▶\",{\"1\":{\"11\":1}}],[\"▶⏸\",{\"1\":{\"11\":1}}],[\"▶\",{\"1\":{\"11\":1}}],[\"◀◀\",{\"1\":{\"11\":1}}],[\"◀\",{\"1\":{\"11\":1}}],[\"▼\",{\"1\":{\"11\":1}}],[\"▲\",{\"1\":{\"11\":1}}],[\"h\",{\"1\":{\"54\":2}}],[\"https\",{\"1\":{\"23\":2,\"30\":1,\"54\":1,\"55\":1}}],[\"html\",{\"0\":{\"1\":1},\"1\":{\"1\":1,\"54\":1}}],[\"held\",{\"0\":{\"40\":1},\"1\":{\"40\":1}}],[\"help\",{\"1\":{\"15\":1,\"33\":1}}],[\"here\",{\"1\":{\"21\":1,\"42\":1}}],[\"here>\",{\"0\":{\"18\":1}}],[\"hard\",{\"1\":{\"37\":1}}],[\"handling\",{\"1\":{\"20\":1}}],[\"handle\",{\"1\":{\"12\":1,\"20\":2}}],[\"have\",{\"1\":{\"19\":1,\"23\":1,\"33\":1,\"41\":1,\"42\":1,\"44\":1,\"46\":1}}],[\"has\",{\"0\":{\"47\":1},\"1\":{\"15\":1,\"20\":1,\"33\":1,\"38\":1}}],[\"haskell\",{\"1\":{\"15\":1}}],[\"had\",{\"1\":{\"15\":1}}],[\"hooks\",{\"1\":{\"31\":2,\"34\":1}}],[\"hope\",{\"1\":{\"15\":1}}],[\"however\",{\"1\":{\"33\":1,\"38\":1,\"39\":1,\"40\":1,\"43\":1}}],[\"how\",{\"1\":{\"15\":2,\"21\":1,\"39\":1}}],[\"hold\",{\"1\":{\"15\":3}}],[\"home\",{\"1\":{\"11\":1,\"54\":3,\"55\":2}}],[\"hyphen\",{\"1\":{\"11\":1}}],[\"hyphenequal\",{\"1\":{\"11\":1}}],[\"₌\",{\"1\":{\"11\":1}}],[\"˜\",{\"1\":{\"11\":1}}],[\"ˋ\",{\"1\":{\"11\":1}}],[\"⎣\",{\"1\":{\"11\":1}}],[\"⎡\",{\"1\":{\"11\":1}}],[\"<username>\",{\"1\":{\"55\":4}}],[\"<mod>\",{\"1\":{\"41\":1}}],[\"<=10\",{\"0\":{\"26\":1}}],[\"<cfg\",{\"1\":{\"20\":1,\"21\":1,\"26\":1}}],[\"<todo\",{\"0\":{\"18\":1}}],[\"<\",{\"1\":{\"11\":1}}],[\"⧵\",{\"1\":{\"11\":1}}],[\"⁄\",{\"1\":{\"11\":1}}],[\"␤\",{\"1\":{\"11\":1}}],[\"⌤\",{\"1\":{\"11\":1}}],[\"↩\",{\"1\":{\"11\":1}}],[\"⏎\",{\"1\":{\"11\":1}}],[\"⌦\",{\"1\":{\"11\":1}}],[\"␡\",{\"1\":{\"11\":1}}],[\"⌫\",{\"1\":{\"11\":1}}],[\"␈\",{\"1\":{\"11\":1}}],[\"␣\",{\"1\":{\"11\":1}}],[\"␠\",{\"1\":{\"11\":1}}],[\"↹\",{\"1\":{\"11\":1}}],[\"⭾\",{\"1\":{\"11\":1}}],[\"⎋\",{\"1\":{\"11\":1}}],[\"⇪\",{\"1\":{\"11\":1}}],[\"⌥\",{\"1\":{\"11\":1}}],[\"⎇\",{\"1\":{\"11\":1}}],[\"❖\",{\"1\":{\"11\":1}}],[\"◆\",{\"1\":{\"11\":1}}],[\"⌘\",{\"1\":{\"11\":1}}],[\"⌃\",{\"1\":{\"11\":1}}],[\"⇧\",{\"1\":{\"11\":1}}],[\"⎈\",{\"1\":{\"11\":2}}],[\"edit\",{\"1\":{\"55\":1}}],[\"elevated\",{\"1\":{\"54\":1}}],[\"etc\",{\"1\":{\"48\":1,\"55\":2}}],[\"effective\",{\"1\":{\"46\":1}}],[\"effect\",{\"1\":{\"38\":1}}],[\"earlier\",{\"1\":{\"20\":1}}],[\"ease\",{\"1\":{\"12\":1}}],[\"exist\",{\"0\":{\"45\":1},\"1\":{\"42\":1}}],[\"exists\",{\"1\":{\"30\":1,\"41\":1}}],[\"examples\",{\"0\":{\"42\":1},\"1\":{\"42\":1}}],[\"example\",{\"1\":{\"26\":1,\"34\":2,\"42\":1,\"54\":1}}],[\"extension\",{\"1\":{\"25\":1}}],[\"extract\",{\"1\":{\"32\":1}}],[\"extra\",{\"1\":{\"19\":1,\"41\":1}}],[\"exploration\",{\"0\":{\"39\":1}}],[\"explicitly\",{\"1\":{\"28\":1}}],[\"explanation\",{\"1\":{\"28\":1,\"29\":1,\"34\":1}}],[\"expand\",{\"1\":{\"24\":1}}],[\"experimental\",{\"1\":{\"20\":2}}],[\"executing\",{\"1\":{\"54\":1}}],[\"executable\",{\"1\":{\"21\":1,\"26\":1,\"54\":2,\"55\":1}}],[\"exec\",{\"1\":{\"54\":1}}],[\"execstart=\",{\"1\":{\"54\":2}}],[\"exercise\",{\"1\":{\"54\":1}}],[\"exe\",{\"1\":{\"20\":8,\"32\":1,\"33\":1}}],[\"excellent\",{\"1\":{\"15\":1}}],[\"even\",{\"1\":{\"12\":1,\"39\":1}}],[\"events\",{\"1\":{\"5\":2,\"6\":2,\"9\":1,\"12\":2,\"34\":2,\"39\":1,\"44\":1}}],[\"event\",{\"0\":{\"5\":1},\"1\":{\"4\":1,\"6\":3,\"8\":1,\"9\":1}}],[\"equal\",{\"1\":{\"11\":1}}],[\"encounter\",{\"1\":{\"54\":1}}],[\"encounters\",{\"1\":{\"43\":1}}],[\"environment=path=\",{\"1\":{\"54\":2}}],[\"enable\",{\"0\":{\"54\":1,\"55\":1},\"1\":{\"54\":1}}],[\"enabled\",{\"1\":{\"28\":1}}],[\"ensure\",{\"1\":{\"42\":1}}],[\"engine\",{\"1\":{\"34\":1}}],[\"enough\",{\"1\":{\"15\":1,\"40\":1}}],[\"end\",{\"1\":{\"11\":1,\"43\":1}}],[\"enter\",{\"1\":{\"11\":1}}],[\"escape\",{\"1\":{\"11\":1}}],[\"e\",{\"1\":{\"11\":1,\"33\":1,\"43\":1}}],[\"rc\",{\"1\":{\"55\":4}}],[\"root\",{\"1\":{\"52\":1,\"54\":1,\"55\":1}}],[\"rw\",{\"1\":{\"52\":1}}],[\"rules\",{\"1\":{\"48\":2,\"50\":1}}],[\"running\",{\"1\":{\"46\":1,\"54\":1}}],[\"run\",{\"0\":{\"50\":1},\"1\":{\"20\":2,\"21\":1,\"24\":3,\"26\":1,\"32\":2,\"53\":1,\"54\":3,\"55\":3}}],[\"rs\",{\"1\":{\"42\":1}}],[\"risk\",{\"1\":{\"28\":1}}],[\"right\",{\"0\":{\"47\":1},\"1\":{\"11\":2,\"40\":2,\"42\":3}}],[\"replacing\",{\"1\":{\"55\":1}}],[\"repo\",{\"1\":{\"31\":1}}],[\"repository\",{\"1\":{\"19\":1}}],[\"restart=no\",{\"1\":{\"54\":1}}],[\"restricted\",{\"1\":{\"28\":1}}],[\"resource\",{\"1\":{\"54\":1}}],[\"remapper\",{\"1\":{\"54\":1}}],[\"remain\",{\"1\":{\"42\":1}}],[\"revisited\",{\"0\":{\"43\":1}}],[\"require\",{\"1\":{\"54\":1}}],[\"required\",{\"1\":{\"42\":1}}],[\"requiring\",{\"1\":{\"21\":1}}],[\"reboot\",{\"0\":{\"50\":1},\"1\":{\"32\":1}}],[\"regular\",{\"1\":{\"28\":1}}],[\"reason\",{\"1\":{\"42\":1}}],[\"reasons\",{\"1\":{\"20\":1,\"43\":1}}],[\"reader\",{\"1\":{\"54\":1}}],[\"read\",{\"1\":{\"4\":2,\"5\":1,\"23\":2,\"34\":1,\"37\":1}}],[\"returns\",{\"1\":{\"54\":1}}],[\"return\",{\"1\":{\"11\":1,\"12\":1}}],[\"ret\",{\"1\":{\"11\":1}}],[\"record\",{\"1\":{\"37\":1}}],[\"recommended\",{\"1\":{\"33\":1}}],[\"received\",{\"1\":{\"34\":1}}],[\"receive\",{\"1\":{\"9\":1,\"12\":1}}],[\"recv\",{\"1\":{\"7\":1}}],[\"reload\",{\"0\":{\"50\":1},\"1\":{\"50\":1,\"54\":1}}],[\"relevant\",{\"1\":{\"42\":1}}],[\"released\",{\"1\":{\"39\":1}}],[\"releases\",{\"0\":{\"39\":1}}],[\"release\",{\"1\":{\"8\":1,\"15\":2,\"19\":1,\"31\":1,\"39\":3}}],[\"relative\",{\"1\":{\"39\":1}}],[\"rely\",{\"1\":{\"6\":1}}],[\"^1\",{\"1\":{\"11\":2}}],[\"blob\",{\"1\":{\"55\":1}}],[\"boot\",{\"1\":{\"55\":1}}],[\"both\",{\"0\":{\"26\":1},\"1\":{\"12\":2,\"34\":1,\"38\":1,\"40\":3,\"42\":1}}],[\"b\",{\"1\":{\"38\":4,\"39\":2,\"41\":3,\"42\":7}}],[\"by\",{\"0\":{\"51\":1},\"1\":{\"28\":1,\"33\":1,\"34\":2,\"42\":1,\"43\":2,\"46\":1}}],[\"bin\",{\"1\":{\"54\":8,\"55\":1}}],[\"binary\",{\"1\":{\"20\":1}}],[\"binaries\",{\"1\":{\"20\":1,\"21\":1,\"28\":2}}],[\"bits\",{\"1\":{\"40\":3,\"42\":1}}],[\"bit\",{\"1\":{\"9\":1,\"41\":2,\"42\":1,\"43\":4}}],[\"badly\",{\"1\":{\"43\":1}}],[\"based\",{\"1\":{\"15\":1}}],[\"backtrack\",{\"1\":{\"43\":1}}],[\"backtracking\",{\"1\":{\"43\":2}}],[\"background=true\",{\"1\":{\"55\":1}}],[\"background\",{\"1\":{\"20\":2,\"21\":1,\"24\":1,\"26\":1}}],[\"back\",{\"1\":{\"12\":1,\"43\":2}}],[\"backslash\",{\"1\":{\"11\":2}}],[\"backspace\",{\"1\":{\"11\":1}}],[\"backwards\",{\"0\":{\"41\":1,\"43\":1},\"1\":{\"40\":1,\"41\":1,\"43\":1}}],[\"backward\",{\"1\":{\"11\":1}}],[\"buttons\",{\"1\":{\"15\":1}}],[\"button12\",{\"1\":{\"11\":1}}],[\"button1\",{\"1\":{\"11\":1}}],[\"but\",{\"1\":{\"15\":1,\"40\":2,\"41\":1,\"42\":2}}],[\"built\",{\"0\":{\"15\":1},\"1\":{\"15\":1}}],[\"brevity\",{\"1\":{\"38\":1}}],[\"breaking\",{\"1\":{\"20\":1}}],[\"brief\",{\"1\":{\"34\":1}}],[\"brightness\",{\"1\":{\"11\":1}}],[\"braindumping\",{\"1\":{\"37\":1}}],[\"branch\",{\"1\":{\"19\":1}}],[\"bracket\",{\"1\":{\"11\":2}}],[\"bspc\",{\"1\":{\"11\":1}}],[\"beneath\",{\"1\":{\"54\":1}}],[\"benefit\",{\"1\":{\"31\":1}}],[\"benefits\",{\"0\":{\"14\":1}}],[\"begin\",{\"1\":{\"42\":1}}],[\"better\",{\"1\":{\"39\":1,\"43\":1}}],[\"between\",{\"1\":{\"34\":1,\"38\":1,\"41\":1}}],[\"being\",{\"1\":{\"33\":2,\"37\":1,\"38\":1}}],[\"behind\",{\"1\":{\"28\":1}}],[\"behaving\",{\"1\":{\"27\":1}}],[\"behaves\",{\"1\":{\"41\":1,\"43\":1}}],[\"behave\",{\"1\":{\"15\":1}}],[\"behavehow\",{\"1\":{\"15\":1}}],[\"below\",{\"1\":{\"20\":1}}],[\"be\",{\"1\":{\"6\":1,\"12\":1,\"20\":1,\"21\":1,\"26\":1,\"28\":2,\"33\":1,\"38\":3,\"39\":2,\"41\":2,\"42\":8,\"43\":3,\"44\":1,\"54\":3,\"55\":1}}],[\"because\",{\"1\":{\"6\":1,\"28\":1,\"42\":1}}],[\"pid\",{\"1\":{\"55\":1}}],[\"pidfile=\",{\"1\":{\"55\":1}}],[\"p\",{\"1\":{\"54\":1}}],[\"pc\",{\"1\":{\"30\":1}}],[\"put\",{\"1\":{\"30\":1,\"33\":1}}],[\"pqrs\",{\"1\":{\"24\":1}}],[\"permutations\",{\"1\":{\"41\":2}}],[\"permissions\",{\"0\":{\"27\":1,\"47\":1},\"1\":{\"21\":1,\"26\":1,\"27\":2,\"44\":2}}],[\"perhaps\",{\"1\":{\"40\":1}}],[\"per\",{\"1\":{\"34\":1}}],[\"period\",{\"1\":{\"11\":2}}],[\"potentially\",{\"1\":{\"39\":1}}],[\"polished\",{\"1\":{\"37\":1}}],[\"positions\",{\"1\":{\"20\":1}}],[\"powershell\",{\"1\":{\"20\":1}}],[\"point\",{\"1\":{\"15\":1,\"21\":1,\"26\":1}}],[\"path\",{\"1\":{\"54\":3}}],[\"patterns\",{\"1\":{\"43\":2}}],[\"pattern\",{\"1\":{\"41\":2,\"43\":2}}],[\"passthru\",{\"0\":{\"34\":1},\"1\":{\"34\":4}}],[\"part\",{\"1\":{\"12\":1}}],[\"pair\",{\"1\":{\"11\":1}}],[\"page\",{\"1\":{\"11\":2,\"44\":1}}],[\"plug\",{\"1\":{\"30\":1}}],[\"plus\",{\"1\":{\"11\":1}}],[\"please\",{\"1\":{\"23\":1,\"27\":1}}],[\"place\",{\"1\":{\"34\":1}}],[\"platform\",{\"1\":{\"20\":1}}],[\"play\",{\"1\":{\"11\":1,\"40\":1}}],[\"pgdn\",{\"1\":{\"11\":1}}],[\"pgup\",{\"1\":{\"11\":1}}],[\"physical\",{\"1\":{\"8\":1}}],[\"priority\",{\"1\":{\"54\":1}}],[\"principle\",{\"1\":{\"42\":1}}],[\"privileged\",{\"1\":{\"33\":1}}],[\"privilege\",{\"1\":{\"32\":1,\"54\":1}}],[\"pr\",{\"1\":{\"37\":1}}],[\"prefer\",{\"1\":{\"41\":1}}],[\"preface\",{\"0\":{\"37\":1}}],[\"presentable\",{\"1\":{\"37\":1}}],[\"pressed\",{\"1\":{\"39\":1,\"41\":1,\"42\":1}}],[\"presses\",{\"0\":{\"40\":1},\"1\":{\"8\":1}}],[\"press\",{\"1\":{\"8\":1,\"15\":2}}],[\"previous\",{\"0\":{\"18\":1},\"1\":{\"11\":1,\"12\":1}}],[\"process\",{\"1\":{\"20\":1,\"21\":1,\"26\":1,\"54\":1}}],[\"processing\",{\"0\":{\"6\":1},\"1\":{\"5\":1,\"7\":1,\"12\":1,\"41\":1}}],[\"probably\",{\"1\":{\"12\":1,\"43\":1}}],[\"projects\",{\"1\":{\"15\":1}}],[\"project\",{\"1\":{\"1\":1,\"13\":2,\"15\":1}}],[\"15\",{\"1\":{\"42\":1}}],[\"1537\",{\"1\":{\"23\":1}}],[\"1024\",{\"1\":{\"40\":1}}],[\"10\",{\"0\":{\"25\":1}}],[\"1264\",{\"1\":{\"23\":1}}],[\"11\",{\"0\":{\"23\":1,\"24\":1},\"1\":{\"24\":1}}],[\"1\",{\"0\":{\"45\":1},\"1\":{\"8\":2,\"11\":1,\"20\":2,\"52\":1}}],[\"1ms\",{\"1\":{\"6\":1}}],[\"0660\",{\"1\":{\"49\":1}}],[\"0x8030\",{\"1\":{\"42\":2}}],[\"0x801e\",{\"1\":{\"42\":3}}],[\"0x802a\",{\"1\":{\"42\":4}}],[\"0x002a\",{\"1\":{\"42\":2}}],[\"0x0030\",{\"1\":{\"42\":3}}],[\"0x001e\",{\"1\":{\"42\":2}}],[\"0xffff\",{\"1\":{\"41\":2}}],[\"0\",{\"1\":{\"8\":2,\"11\":1}}],[\"=>\",{\"1\":{\"42\":3}}],[\"=\",{\"1\":{\"8\":2}}],[\"yes\",{\"1\":{\"43\":1}}],[\"yagni\",{\"1\":{\"42\":1}}],[\"your\",{\"0\":{\"26\":1,\"46\":1},\"1\":{\"30\":1,\"33\":1,\"34\":1,\"44\":1}}],[\"younger\",{\"1\":{\"15\":1}}],[\"you\",{\"1\":{\"15\":2,\"20\":6,\"24\":3,\"27\":1,\"30\":3,\"31\":1,\"33\":2,\"34\":1,\"37\":1,\"46\":1,\"53\":2,\"54\":2}}],[\"y\",{\"1\":{\"8\":2}}],[\"x64\",{\"1\":{\"33\":1}}],[\"x86\",{\"1\":{\"20\":1,\"21\":1}}],[\"x\",{\"1\":{\"8\":2,\"11\":2}}],[\"kernel==\",{\"1\":{\"49\":1}}],[\"kernel\",{\"1\":{\"25\":1}}],[\"keycodes\",{\"1\":{\"42\":1}}],[\"keycode\",{\"1\":{\"12\":2}}],[\"keyboard\",{\"1\":{\"12\":2,\"34\":4,\"54\":1}}],[\"keyberon\",{\"1\":{\"6\":1,\"8\":2,\"12\":1}}],[\"keypad\",{\"1\":{\"11\":4}}],[\"keys\",{\"0\":{\"40\":1},\"1\":{\"8\":1,\"9\":1,\"11\":1,\"15\":1,\"39\":1,\"40\":2,\"42\":4}}],[\"key\",{\"0\":{\"11\":1},\"1\":{\"5\":1,\"8\":2,\"11\":1,\"15\":3,\"20\":1,\"42\":2}}],[\"karabiner\",{\"0\":{\"25\":1},\"1\":{\"24\":7,\"25\":1}}],[\"kanata\",{\"0\":{\"14\":1,\"15\":1,\"34\":1},\"1\":{\"8\":1,\"12\":2,\"15\":5,\"19\":1,\"20\":13,\"21\":5,\"23\":2,\"26\":4,\"27\":1,\"31\":1,\"33\":4,\"34\":6,\"44\":1,\"53\":1,\"54\":11,\"55\":8}}],[\"kbd\",{\"1\":{\"19\":1,\"20\":1,\"33\":1,\"54\":1,\"55\":1}}],[\"kbdout\",{\"1\":{\"12\":1}}],[\"ktrl\",{\"1\":{\"15\":1}}],[\"known\",{\"0\":{\"30\":1}}],[\"know\",{\"1\":{\"15\":2}}],[\"kmonad\",{\"0\":{\"13\":1,\"14\":1},\"1\":{\"13\":1,\"15\":5,\"55\":2}}],[\"ioschedulingclass=realtime\",{\"1\":{\"54\":1}}],[\"idea\",{\"0\":{\"39\":1,\"40\":1},\"1\":{\"43\":1}}],[\"important\",{\"1\":{\"42\":1}}],[\"improvement\",{\"0\":{\"36\":1},\"1\":{\"37\":1}}],[\"implementing\",{\"1\":{\"54\":1}}],[\"implemented\",{\"1\":{\"14\":1}}],[\"implementation\",{\"0\":{\"12\":1},\"1\":{\"39\":1,\"42\":1}}],[\"i\",{\"0\":{\"15\":1},\"1\":{\"15\":7,\"28\":1,\"33\":2,\"39\":1,\"40\":1,\"41\":1,\"43\":2}}],[\"illumination\",{\"1\":{\"11\":2}}],[\"item\",{\"1\":{\"42\":1,\"43\":1}}],[\"itself\",{\"1\":{\"42\":1}}],[\"its\",{\"1\":{\"42\":1}}],[\"it\",{\"1\":{\"9\":1,\"12\":2,\"15\":5,\"20\":1,\"21\":2,\"24\":1,\"26\":2,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"37\":2,\"39\":2,\"42\":2,\"43\":2,\"46\":1}}],[\"init\",{\"1\":{\"55\":2}}],[\"inject\",{\"1\":{\"44\":1}}],[\"invalid\",{\"1\":{\"43\":2}}],[\"informal\",{\"1\":{\"37\":1}}],[\"increase\",{\"1\":{\"54\":1}}],[\"increases\",{\"1\":{\"40\":1}}],[\"inconsistently\",{\"1\":{\"33\":1}}],[\"included\",{\"1\":{\"20\":1,\"54\":1}}],[\"into\",{\"1\":{\"15\":1,\"28\":1,\"34\":1,\"39\":1,\"40\":1}}],[\"integers\",{\"1\":{\"42\":1}}],[\"integrate\",{\"1\":{\"39\":1}}],[\"integration\",{\"1\":{\"12\":1}}],[\"interest\",{\"1\":{\"20\":1}}],[\"intercept\",{\"1\":{\"12\":1}}],[\"interception\",{\"0\":{\"12\":1},\"1\":{\"12\":2,\"30\":2,\"31\":1,\"32\":1,\"33\":4}}],[\"installed\",{\"1\":{\"33\":1,\"34\":1}}],[\"installer\",{\"1\":{\"32\":1}}],[\"installation\",{\"0\":{\"33\":1}}],[\"installing\",{\"0\":{\"26\":1}}],[\"install\",{\"0\":{\"25\":1,\"32\":1},\"1\":{\"24\":2,\"25\":1,\"31\":1,\"32\":1,\"54\":1}}],[\"instructions\",{\"0\":{\"23\":1,\"24\":1,\"44\":1},\"1\":{\"20\":1,\"21\":2,\"22\":1,\"29\":1,\"34\":1}}],[\"instead\",{\"1\":{\"15\":1,\"30\":1,\"31\":1,\"40\":1}}],[\"insert\",{\"0\":{\"49\":1},\"1\":{\"11\":1}}],[\"input\",{\"0\":{\"46\":1},\"1\":{\"12\":3,\"20\":2,\"34\":1,\"44\":1,\"46\":1,\"48\":1}}],[\"inkanata\",{\"1\":{\"9\":1}}],[\"in\",{\"0\":{\"49\":1},\"1\":{\"9\":1,\"11\":1,\"12\":2,\"15\":3,\"19\":2,\"20\":6,\"21\":1,\"24\":1,\"26\":1,\"30\":1,\"31\":2,\"33\":2,\"37\":1,\"38\":1,\"40\":2,\"41\":2,\"42\":3,\"43\":2,\"44\":2,\"54\":5}}],[\"independent\",{\"1\":{\"12\":1}}],[\"index\",{\"1\":{\"8\":1}}],[\"indices\",{\"1\":{\"8\":1}}],[\"isn\",{\"1\":{\"55\":1}}],[\"issuecomment\",{\"1\":{\"23\":1}}],[\"issue\",{\"0\":{\"30\":1},\"1\":{\"15\":1,\"20\":2,\"23\":1,\"27\":2,\"30\":1,\"33\":1}}],[\"issues\",{\"1\":{\"15\":1,\"20\":1,\"23\":1,\"30\":1,\"40\":1}}],[\"is\",{\"1\":{\"8\":2,\"9\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":3,\"19\":1,\"20\":3,\"22\":1,\"27\":1,\"28\":2,\"31\":2,\"37\":2,\"38\":2,\"39\":1,\"40\":1,\"41\":2,\"42\":4,\"54\":4}}],[\"if\",{\"0\":{\"45\":1},\"1\":{\"6\":2,\"15\":2,\"27\":1,\"30\":2,\"33\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":2,\"42\":2,\"43\":4,\"54\":2}}],[\"gets\",{\"1\":{\"43\":1}}],[\"get\",{\"1\":{\"28\":1,\"34\":1,\"42\":1}}],[\"generates\",{\"1\":{\"41\":1}}],[\"generate\",{\"1\":{\"1\":1}}],[\"github\",{\"1\":{\"23\":2,\"30\":1,\"54\":1,\"55\":1}}],[\"give\",{\"1\":{\"15\":1}}],[\"group=\",{\"1\":{\"49\":1}}],[\"groups\",{\"1\":{\"46\":1}}],[\"groupadd\",{\"1\":{\"45\":1}}],[\"group\",{\"0\":{\"45\":2,\"46\":1}}],[\"great\",{\"1\":{\"15\":1}}],[\"grave\",{\"1\":{\"11\":1}}],[\"grained\",{\"1\":{\"6\":1}}],[\"good\",{\"1\":{\"15\":1}}],[\"gone\",{\"1\":{\"15\":1}}],[\"guide\",{\"0\":{\"17\":1},\"1\":{\"15\":1,\"17\":2}}],[\"g\",{\"1\":{\"11\":1,\"33\":1,\"43\":1}}],[\"nice=\",{\"1\":{\"54\":1}}],[\"numerical\",{\"1\":{\"42\":1}}],[\"numlock\",{\"1\":{\"11\":1}}],[\"newly\",{\"1\":{\"42\":1}}],[\"newer\",{\"0\":{\"23\":1,\"24\":1},\"1\":{\"24\":1}}],[\"new\",{\"0\":{\"45\":1,\"48\":1},\"1\":{\"12\":1,\"20\":2,\"37\":1,\"42\":1,\"55\":1}}],[\"needs\",{\"1\":{\"20\":1,\"21\":1,\"26\":1,\"44\":2}}],[\"need\",{\"1\":{\"12\":3,\"20\":1,\"24\":1,\"27\":1,\"31\":1,\"39\":1,\"42\":2,\"53\":1}}],[\"needed\",{\"1\":{\"6\":1}}],[\"next\",{\"1\":{\"11\":1}}],[\"name\",{\"1\":{\"11\":1,\"28\":1}}],[\"node=uinput\",{\"1\":{\"49\":1}}],[\"now\",{\"1\":{\"14\":1,\"15\":1,\"20\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":2}}],[\"non\",{\"1\":{\"11\":1,\"20\":1}}],[\"no\",{\"1\":{\"6\":1,\"28\":1,\"38\":1,\"40\":1}}],[\"notably\",{\"1\":{\"42\":1}}],[\"note\",{\"1\":{\"20\":3,\"21\":1}}],[\"notes\",{\"0\":{\"12\":1}}],[\"not\",{\"0\":{\"45\":1},\"1\":{\"1\":1,\"15\":1,\"19\":1,\"20\":2,\"21\":1,\"26\":1,\"27\":1,\"38\":1,\"42\":4,\"43\":1,\"56\":1}}],[\"l\",{\"1\":{\"51\":1}}],[\"ls\",{\"1\":{\"51\":1}}],[\"lsft\",{\"1\":{\"15\":2,\"38\":2,\"39\":3,\"41\":2,\"42\":4}}],[\"llhook+sendinput\",{\"1\":{\"20\":1}}],[\"local\",{\"1\":{\"54\":2}}],[\"location\",{\"1\":{\"33\":1,\"54\":1}}],[\"looks\",{\"1\":{\"42\":1}}],[\"loop\",{\"0\":{\"5\":1,\"6\":1},\"1\":{\"5\":1,\"7\":1,\"12\":1}}],[\"loops\",{\"1\":{\"4\":1,\"9\":1}}],[\"loaded\",{\"0\":{\"53\":1},\"1\":{\"33\":1}}],[\"lower\",{\"1\":{\"31\":1}}],[\"login\",{\"1\":{\"46\":1}}],[\"logic\",{\"1\":{\"42\":1}}],[\"logout\",{\"1\":{\"46\":1}}],[\"log\",{\"1\":{\"18\":1}}],[\"least\",{\"1\":{\"54\":1}}],[\"leave\",{\"1\":{\"24\":1}}],[\"level\",{\"1\":{\"31\":1}}],[\"legacy\",{\"1\":{\"20\":4}}],[\"let\",{\"1\":{\"15\":1,\"41\":1,\"42\":2}}],[\"left\",{\"1\":{\"11\":2,\"37\":1,\"40\":2,\"42\":4,\"54\":1}}],[\"like\",{\"1\":{\"39\":1,\"42\":3}}],[\"little\",{\"1\":{\"39\":1}}],[\"library\",{\"1\":{\"24\":1,\"33\":1,\"34\":1}}],[\"limited\",{\"1\":{\"22\":1}}],[\"lines\",{\"1\":{\"54\":1}}],[\"line\",{\"1\":{\"32\":1,\"54\":3}}],[\"link\",{\"1\":{\"17\":3,\"27\":1}}],[\"linux\",{\"0\":{\"21\":1},\"1\":{\"12\":1,\"21\":1,\"44\":1,\"55\":1}}],[\"listed\",{\"1\":{\"15\":1,\"55\":1}}],[\"listen\",{\"1\":{\"7\":1}}],[\"list\",{\"1\":{\"11\":1}}],[\"latest\",{\"1\":{\"54\":1}}],[\"lagginess\",{\"1\":{\"54\":1}}],[\"laziness\",{\"1\":{\"37\":1}}],[\"launch\",{\"1\":{\"34\":1}}],[\"language\",{\"1\":{\"20\":1}}],[\"last\",{\"1\":{\"11\":1}}],[\"layouts\",{\"1\":{\"20\":1}}],[\"layout\",{\"0\":{\"8\":1},\"1\":{\"6\":2,\"8\":1}}],[\"lctrl\",{\"1\":{\"11\":1}}],[\"md\",{\"1\":{\"55\":1}}],[\"mkdir\",{\"1\":{\"54\":1}}],[\"m\",{\"1\":{\"43\":1}}],[\"msb\",{\"1\":{\"42\":1}}],[\"might\",{\"1\":{\"46\":1}}],[\"mind\",{\"1\":{\"40\":1}}],[\"missing\",{\"1\":{\"15\":1}}],[\"must\",{\"1\":{\"55\":1}}],[\"multiple\",{\"1\":{\"20\":1}}],[\"mute\",{\"1\":{\"11\":1}}],[\"my\",{\"1\":{\"15\":1,\"33\":1}}],[\"myself\",{\"1\":{\"15\":1}}],[\"mean\",{\"1\":{\"41\":2}}],[\"means\",{\"1\":{\"11\":1,\"12\":1,\"31\":1,\"40\":1}}],[\"mechanism\",{\"1\":{\"20\":2,\"31\":1}}],[\"me\",{\"1\":{\"15\":2}}],[\"master\",{\"1\":{\"55\":1}}],[\"man\",{\"1\":{\"54\":1}}],[\"manager\",{\"1\":{\"24\":2}}],[\"machine\",{\"0\":{\"50\":1}}],[\"macos\",{\"0\":{\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1},\"1\":{\"22\":1,\"24\":3,\"26\":3,\"27\":1}}],[\"match\",{\"1\":{\"43\":1}}],[\"make\",{\"0\":{\"47\":1,\"53\":1},\"1\":{\"34\":1,\"39\":1,\"46\":1,\"54\":1}}],[\"may\",{\"1\":{\"19\":1,\"21\":1,\"26\":1,\"27\":1,\"42\":1,\"53\":1}}],[\"maybe\",{\"1\":{\"12\":1,\"40\":1,\"41\":2,\"42\":2}}],[\"maps\",{\"1\":{\"12\":1}}],[\"main\",{\"0\":{\"4\":1},\"1\":{\"19\":1,\"42\":1}}],[\"modprobe\",{\"1\":{\"53\":1}}],[\"modded\",{\"1\":{\"43\":1}}],[\"modcancel\",{\"1\":{\"43\":1}}],[\"mode=\",{\"1\":{\"49\":1}}],[\"mode\",{\"1\":{\"41\":1,\"43\":1}}],[\"mod\",{\"0\":{\"40\":1},\"1\":{\"41\":1}}],[\"modified\",{\"1\":{\"43\":1}}],[\"modifier\",{\"1\":{\"41\":1,\"42\":3,\"43\":1}}],[\"modifiers\",{\"1\":{\"11\":1,\"40\":2}}],[\"modifying\",{\"1\":{\"42\":1}}],[\"modify\",{\"0\":{\"40\":1}}],[\"motivation\",{\"0\":{\"38\":1}}],[\"more\",{\"1\":{\"15\":1,\"31\":1,\"37\":1,\"54\":1}}],[\"mouse\",{\"1\":{\"12\":1,\"15\":1}}],[\"most\",{\"1\":{\"9\":1}}],[\"monotonic\",{\"1\":{\"6\":1}}],[\"mpsc\",{\"1\":{\"6\":1}}],[\"cpuschedulingpriority=99\",{\"1\":{\"54\":1}}],[\"cpuschedulingpolicy=rr\",{\"1\":{\"54\":1}}],[\"crashed\",{\"1\":{\"55\":1}}],[\"crw\",{\"1\":{\"52\":1}}],[\"create\",{\"0\":{\"45\":1,\"48\":1,\"54\":1,\"55\":1},\"1\":{\"37\":1}}],[\"cross\",{\"1\":{\"20\":1}}],[\"c\",{\"1\":{\"33\":1,\"39\":1,\"54\":2}}],[\"cfg\",{\"1\":{\"20\":1,\"21\":1,\"26\":1,\"54\":1}}],[\"cmd\",{\"0\":{\"28\":1},\"1\":{\"20\":1,\"28\":3}}],[\"current\",{\"1\":{\"19\":1,\"40\":1}}],[\"clear\",{\"1\":{\"41\":1}}],[\"click\",{\"1\":{\"20\":1,\"24\":1,\"34\":1}}],[\"clients\",{\"1\":{\"7\":1}}],[\"clientmessages\",{\"1\":{\"7\":1}}],[\"closest\",{\"1\":{\"13\":1}}],[\"close\",{\"1\":{\"11\":1}}],[\"cargo\",{\"1\":{\"54\":3,\"55\":1}}],[\"cares\",{\"1\":{\"40\":1}}],[\"care\",{\"1\":{\"39\":1}}],[\"cases\",{\"1\":{\"15\":1,\"43\":1}}],[\"case\",{\"1\":{\"12\":1,\"20\":1,\"42\":2,\"54\":1}}],[\"capslock\",{\"1\":{\"11\":1}}],[\"cancellation\",{\"1\":{\"43\":1}}],[\"can\",{\"1\":{\"6\":1,\"12\":2,\"20\":1,\"33\":1,\"34\":2,\"38\":1,\"43\":1,\"54\":2}}],[\"chorded\",{\"1\":{\"42\":1}}],[\"chord\",{\"1\":{\"37\":1}}],[\"chords\",{\"0\":{\"36\":1},\"1\":{\"38\":2,\"42\":1}}],[\"chmod\",{\"1\":{\"21\":1,\"26\":1,\"55\":1}}],[\"changed\",{\"1\":{\"39\":1}}],[\"change\",{\"1\":{\"18\":1,\"20\":2,\"40\":1,\"42\":1}}],[\"changelog\",{\"0\":{\"18\":1}}],[\"changes\",{\"1\":{\"11\":1,\"20\":2}}],[\"channel\",{\"1\":{\"5\":1,\"12\":1,\"34\":1}}],[\"checksums\",{\"0\":{\"35\":1}}],[\"checks\",{\"1\":{\"6\":1}}],[\"check\",{\"1\":{\"6\":1,\"42\":2,\"43\":1,\"54\":2,\"55\":1}}],[\"correspond\",{\"1\":{\"42\":1}}],[\"correctly\",{\"1\":{\"27\":1}}],[\"could\",{\"1\":{\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":2}}],[\"copy\",{\"1\":{\"31\":1,\"33\":1}}],[\"com\",{\"1\":{\"23\":2,\"30\":1,\"54\":1,\"55\":1}}],[\"comment\",{\"1\":{\"23\":1}}],[\"comma\",{\"1\":{\"11\":1}}],[\"command=\",{\"1\":{\"55\":1}}],[\"command\",{\"0\":{\"51\":1},\"1\":{\"11\":1,\"24\":1,\"32\":1,\"53\":1,\"54\":1,\"55\":3}}],[\"complicated\",{\"1\":{\"41\":1}}],[\"completely\",{\"1\":{\"28\":1}}],[\"compilation\",{\"1\":{\"28\":1}}],[\"compiled\",{\"1\":{\"20\":1,\"21\":1,\"28\":1}}],[\"compat\",{\"1\":{\"43\":1}}],[\"compatibility\",{\"0\":{\"41\":1,\"43\":1},\"1\":{\"40\":1,\"41\":1,\"43\":1}}],[\"compatible\",{\"1\":{\"1\":1}}],[\"compared\",{\"1\":{\"20\":1}}],[\"comparison\",{\"0\":{\"13\":1}}],[\"codenamed\",{\"1\":{\"38\":1}}],[\"codes\",{\"1\":{\"12\":1}}],[\"code\",{\"0\":{\"9\":1,\"49\":1},\"1\":{\"8\":1,\"9\":1,\"12\":1,\"38\":1,\"39\":2,\"41\":1,\"42\":1,\"43\":1}}],[\"conflicts\",{\"1\":{\"34\":1}}],[\"config=\",{\"1\":{\"55\":1}}],[\"configuration\",{\"0\":{\"17\":1,\"19\":1},\"1\":{\"17\":1,\"20\":1,\"21\":1,\"26\":1,\"42\":1}}],[\"config\",{\"1\":{\"4\":1,\"34\":1,\"54\":4,\"55\":1}}],[\"conditional\",{\"1\":{\"28\":1}}],[\"conditionally\",{\"1\":{\"28\":1,\"39\":1}}],[\"constrained\",{\"1\":{\"54\":1}}],[\"consideration\",{\"1\":{\"42\":1}}],[\"consider\",{\"1\":{\"28\":1}}],[\"consistently\",{\"1\":{\"20\":2}}],[\"consumer\",{\"1\":{\"11\":4}}],[\"continue\",{\"1\":{\"41\":1}}],[\"contents\",{\"1\":{\"24\":2}}],[\"contain\",{\"1\":{\"20\":1}}],[\"contains\",{\"1\":{\"20\":2}}],[\"contribute\",{\"1\":{\"15\":1,\"37\":1}}],[\"control\",{\"1\":{\"11\":1,\"50\":1}}],[\"convert\",{\"1\":{\"12\":2}}],[\"converting\",{\"0\":{\"1\":1}}],[\"connected\",{\"1\":{\"7\":1}}],[\"obtain\",{\"1\":{\"44\":1}}],[\"oblitum\",{\"1\":{\"30\":1}}],[\"obligatory\",{\"0\":{\"3\":1}}],[\"older\",{\"0\":{\"25\":1}}],[\"old\",{\"0\":{\"24\":1}}],[\"omitted\",{\"1\":{\"20\":1}}],[\"otherwise\",{\"1\":{\"42\":1}}],[\"other\",{\"1\":{\"20\":3}}],[\"out\",{\"1\":{\"18\":1,\"35\":1,\"37\":1,\"39\":1,\"42\":1}}],[\"outputs\",{\"1\":{\"15\":1}}],[\"output\",{\"0\":{\"52\":1},\"1\":{\"12\":2,\"15\":1,\"20\":4,\"34\":1,\"38\":1}}],[\"over\",{\"0\":{\"14\":1}}],[\"oh\",{\"1\":{\"12\":1}}],[\"options+=\",{\"1\":{\"49\":1}}],[\"optionally\",{\"1\":{\"20\":1}}],[\"opted\",{\"1\":{\"28\":1}}],[\"operates\",{\"1\":{\"42\":1}}],[\"operate\",{\"1\":{\"20\":1}}],[\"operating\",{\"1\":{\"20\":1}}],[\"openrc\",{\"0\":{\"55\":1},\"1\":{\"55\":1}}],[\"open\",{\"1\":{\"11\":1,\"20\":1,\"21\":1,\"24\":1,\"26\":1,\"34\":1}}],[\"opposed\",{\"1\":{\"12\":1,\"37\":1}}],[\"own\",{\"1\":{\"12\":1,\"42\":1}}],[\"oscode\",{\"1\":{\"12\":1}}],[\"oskbd\",{\"1\":{\"9\":1}}],[\"os\",{\"0\":{\"9\":1,\"26\":1},\"1\":{\"8\":1,\"9\":2,\"34\":1,\"42\":1}}],[\"offers\",{\"1\":{\"15\":1}}],[\"off\",{\"1\":{\"15\":1,\"43\":1}}],[\"of\",{\"0\":{\"14\":1,\"39\":1},\"1\":{\"8\":2,\"9\":2,\"11\":1,\"12\":3,\"15\":1,\"19\":1,\"20\":3,\"30\":1,\"31\":2,\"33\":1,\"34\":1,\"37\":3,\"38\":1,\"40\":3,\"41\":2,\"42\":3,\"43\":3,\"54\":2}}],[\"org\",{\"1\":{\"24\":1,\"54\":1}}],[\"original\",{\"1\":{\"12\":1,\"55\":1}}],[\"or\",{\"0\":{\"50\":1},\"1\":{\"6\":1,\"8\":1,\"11\":7,\"15\":2,\"20\":1,\"24\":1,\"30\":1,\"31\":1,\"38\":1,\"39\":3,\"41\":2,\"54\":1}}],[\"one\",{\"1\":{\"15\":1,\"19\":1,\"40\":3,\"42\":2,\"54\":1}}],[\"only\",{\"1\":{\"11\":1,\"12\":1,\"20\":1,\"21\":1,\"38\":1,\"40\":1,\"42\":1,\"43\":1}}],[\"on\",{\"1\":{\"5\":1,\"6\":2,\"7\":1,\"20\":1,\"22\":1,\"42\":1,\"43\":1}}],[\"svcname\",{\"1\":{\"55\":1}}],[\"snippet\",{\"1\":{\"54\":1}}],[\"sbin\",{\"1\":{\"54\":1,\"55\":1}}],[\"scrapping\",{\"1\":{\"43\":1}}],[\"screw\",{\"1\":{\"41\":1}}],[\"script\",{\"1\":{\"32\":1,\"55\":1}}],[\"scancodes\",{\"1\":{\"20\":1}}],[\"scancode\",{\"1\":{\"12\":1,\"20\":2}}],[\"such\",{\"1\":{\"54\":1}}],[\"sure\",{\"0\":{\"47\":1,\"53\":1},\"1\":{\"46\":1,\"54\":1}}],[\"subsystem\",{\"1\":{\"44\":1}}],[\"subsequent\",{\"1\":{\"39\":1}}],[\"sums\",{\"1\":{\"35\":1}}],[\"sudo\",{\"1\":{\"21\":2,\"24\":2,\"26\":1,\"45\":1,\"46\":2,\"50\":2,\"53\":1,\"55\":3}}],[\"support\",{\"1\":{\"22\":1,\"24\":1,\"37\":1}}],[\"support~\",{\"1\":{\"14\":1}}],[\"supported\",{\"0\":{\"11\":1},\"1\":{\"19\":1,\"38\":1}}],[\"say\",{\"1\":{\"41\":2,\"42\":1}}],[\"same\",{\"1\":{\"20\":4}}],[\"sample\",{\"0\":{\"19\":1}}],[\"save\",{\"1\":{\"12\":2}}],[\"software\",{\"1\":{\"54\":1}}],[\"soon\",{\"1\":{\"12\":1}}],[\"something\",{\"1\":{\"33\":1}}],[\"sometimes\",{\"1\":{\"33\":1}}],[\"somehow\",{\"1\":{\"24\":1}}],[\"some\",{\"1\":{\"12\":1,\"15\":1,\"42\":1,\"43\":1}}],[\"so\",{\"1\":{\"12\":1,\"20\":1,\"21\":1,\"26\":1,\"42\":2,\"54\":1}}],[\"stored\",{\"1\":{\"40\":1}}],[\"stops\",{\"1\":{\"33\":1}}],[\"steps\",{\"0\":{\"32\":1,\"33\":1},\"1\":{\"33\":2,\"44\":1}}],[\"still\",{\"1\":{\"15\":1}}],[\"status\",{\"1\":{\"54\":1,\"55\":1}}],[\"static\",{\"1\":{\"49\":1}}],[\"state\",{\"1\":{\"37\":1}}],[\"stay\",{\"1\":{\"20\":1,\"21\":1,\"26\":1}}],[\"standard\",{\"1\":{\"12\":1,\"20\":2}}],[\"starts\",{\"1\":{\"33\":1}}],[\"startup\",{\"1\":{\"20\":1,\"21\":1,\"26\":1}}],[\"starting\",{\"1\":{\"15\":1,\"54\":1}}],[\"start\",{\"1\":{\"4\":1,\"20\":2,\"21\":1,\"26\":1,\"33\":1,\"42\":1,\"53\":1,\"54\":1,\"55\":2}}],[\"stuff\",{\"1\":{\"12\":1}}],[\"structure\",{\"1\":{\"39\":1}}],[\"struct\",{\"1\":{\"12\":1}}],[\"sh\",{\"1\":{\"54\":4}}],[\"sha256\",{\"0\":{\"35\":1}}],[\"shell\",{\"1\":{\"32\":1}}],[\"shutting\",{\"1\":{\"30\":1}}],[\"should\",{\"1\":{\"12\":2,\"24\":1,\"28\":1,\"42\":1,\"43\":1,\"54\":1}}],[\"shifted\",{\"1\":{\"42\":2}}],[\"shifts\",{\"1\":{\"40\":1,\"42\":2}}],[\"shift\",{\"1\":{\"11\":1}}],[\"syntax\",{\"1\":{\"42\":1}}],[\"sync\",{\"1\":{\"12\":1}}],[\"systemctl\",{\"1\":{\"54\":4}}],[\"system32\",{\"1\":{\"33\":1}}],[\"systemd\",{\"0\":{\"54\":1},\"1\":{\"21\":1,\"54\":5}}],[\"systems\",{\"1\":{\"20\":1}}],[\"symbol\",{\"1\":{\"11\":2}}],[\"symbols\",{\"0\":{\"11\":1}}],[\"simplify\",{\"1\":{\"42\":1}}],[\"simplicity\",{\"1\":{\"41\":1}}],[\"simulated\",{\"1\":{\"34\":1}}],[\"sides\",{\"1\":{\"40\":1}}],[\"single\",{\"1\":{\"12\":1}}],[\"since\",{\"0\":{\"18\":1},\"1\":{\"9\":1,\"40\":1,\"42\":1}}],[\"sign\",{\"1\":{\"11\":2}}],[\"slash\",{\"1\":{\"11\":2}}],[\"sleep\",{\"1\":{\"6\":2,\"30\":1}}],[\"specifiers\",{\"1\":{\"54\":2}}],[\"specific\",{\"0\":{\"9\":1},\"1\":{\"9\":1}}],[\"special\",{\"1\":{\"41\":1,\"42\":1,\"43\":1}}],[\"space\",{\"1\":{\"11\":1}}],[\"spacebar\",{\"1\":{\"11\":1}}],[\"spc\",{\"1\":{\"11\":1}}],[\"s\",{\"1\":{\"9\":1,\"11\":1,\"15\":1,\"34\":1,\"37\":1,\"38\":2,\"39\":1,\"41\":2,\"42\":8,\"46\":1}}],[\"service\",{\"0\":{\"54\":1,\"55\":1},\"1\":{\"54\":7,\"55\":2}}],[\"server\",{\"0\":{\"7\":1},\"1\":{\"6\":1}}],[\"servermessages\",{\"1\":{\"6\":1,\"7\":1}}],[\"seq\",{\"1\":{\"39\":1}}],[\"seqchords\",{\"1\":{\"38\":1,\"39\":1,\"41\":1,\"42\":2,\"43\":2}}],[\"sequence\",{\"0\":{\"36\":2},\"1\":{\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":3}}],[\"sequences\",{\"1\":{\"15\":1,\"37\":1,\"38\":1,\"39\":2,\"42\":4,\"43\":1}}],[\"security\",{\"1\":{\"28\":1}}],[\"settings\",{\"0\":{\"51\":1}}],[\"set\",{\"1\":{\"21\":1,\"40\":1,\"42\":1}}],[\"seem\",{\"1\":{\"42\":2}}],[\"seems\",{\"1\":{\"39\":2,\"40\":1,\"41\":1,\"42\":1}}],[\"see\",{\"1\":{\"15\":1,\"20\":1,\"21\":1,\"27\":1,\"40\":1}}],[\"sensible\",{\"1\":{\"42\":1}}],[\"sent\",{\"1\":{\"12\":1}}],[\"sending\",{\"1\":{\"12\":2}}],[\"sendinput\",{\"1\":{\"12\":1}}],[\"send\",{\"1\":{\"5\":1,\"6\":3,\"12\":2,\"34\":1}}],[\"semicolon\",{\"1\":{\"11\":1}}],[\"separated\",{\"1\":{\"11\":1}}],[\"separate\",{\"1\":{\"1\":1,\"6\":1}}],[\"d\",{\"1\":{\"48\":1,\"55\":2}}],[\"dll\",{\"0\":{\"34\":1},\"1\":{\"33\":4,\"34\":3}}],[\"date\",{\"1\":{\"52\":1}}],[\"data\",{\"0\":{\"42\":1},\"1\":{\"42\":1}}],[\"daemon\",{\"0\":{\"54\":1,\"55\":1},\"1\":{\"24\":3,\"54\":1}}],[\"day\",{\"1\":{\"15\":1}}],[\"dashboard\",{\"1\":{\"11\":1}}],[\"drivers\",{\"0\":{\"53\":1},\"1\":{\"33\":1}}],[\"driverkit\",{\"1\":{\"24\":1}}],[\"driver\",{\"0\":{\"12\":1,\"25\":1,\"26\":1,\"32\":1},\"1\":{\"24\":2,\"30\":1,\"31\":3,\"33\":1}}],[\"doing\",{\"1\":{\"54\":1}}],[\"do\",{\"1\":{\"33\":1,\"42\":2,\"44\":1}}],[\"doesn\",{\"1\":{\"39\":1,\"42\":1}}],[\"does\",{\"0\":{\"45\":1},\"1\":{\"20\":2,\"21\":1,\"26\":1,\"34\":1,\"41\":1,\"42\":2,\"43\":1}}],[\"dogfood\",{\"1\":{\"15\":1}}],[\"double\",{\"1\":{\"15\":1,\"20\":1,\"34\":1}}],[\"don\",{\"1\":{\"12\":2,\"15\":1,\"40\":1}}],[\"downloaded\",{\"1\":{\"21\":1,\"26\":1}}],[\"download\",{\"1\":{\"20\":2,\"21\":1,\"26\":1,\"34\":1}}],[\"down\",{\"1\":{\"11\":5,\"30\":1}}],[\"document\",{\"1\":{\"37\":1,\"38\":1,\"42\":1}}],[\"documents\",{\"1\":{\"33\":2}}],[\"documentation=https\",{\"1\":{\"54\":1}}],[\"documentation\",{\"1\":{\"1\":1}}],[\"doc\",{\"0\":{\"2\":1},\"1\":{\"37\":2,\"55\":1}}],[\"dev\",{\"1\":{\"51\":1,\"52\":1}}],[\"device\",{\"0\":{\"47\":1},\"1\":{\"12\":2}}],[\"devices\",{\"1\":{\"12\":1,\"30\":1}}],[\"depending\",{\"1\":{\"39\":1}}],[\"decide\",{\"1\":{\"38\":1}}],[\"described\",{\"1\":{\"42\":1}}],[\"description=kanata\",{\"1\":{\"54\":1}}],[\"description\",{\"0\":{\"31\":1},\"1\":{\"42\":1}}],[\"desired\",{\"1\":{\"40\":1,\"42\":1,\"43\":1}}],[\"desire\",{\"1\":{\"38\":1}}],[\"designing\",{\"1\":{\"37\":1}}],[\"design\",{\"0\":{\"2\":1},\"1\":{\"37\":1}}],[\"defcfg\",{\"1\":{\"43\":1}}],[\"deferring\",{\"1\":{\"42\":1}}],[\"define\",{\"1\":{\"41\":1,\"42\":1}}],[\"default\",{\"1\":{\"20\":1,\"28\":1,\"42\":1,\"43\":2,\"55\":1}}],[\"defsrc\",{\"1\":{\"20\":2}}],[\"del\",{\"1\":{\"11\":1}}],[\"delete\",{\"1\":{\"11\":2}}],[\"differs\",{\"1\":{\"42\":1}}],[\"difference\",{\"1\":{\"38\":1}}],[\"differently\",{\"1\":{\"41\":1}}],[\"differentiate\",{\"1\":{\"41\":1}}],[\"differentiated\",{\"1\":{\"38\":1}}],[\"differentiating\",{\"1\":{\"40\":1}}],[\"different\",{\"0\":{\"40\":1},\"1\":{\"9\":1,\"14\":1,\"20\":1,\"39\":1,\"42\":2}}],[\"difficult\",{\"1\":{\"39\":1,\"42\":1}}],[\"disorganized\",{\"1\":{\"37\":1}}],[\"discussions\",{\"1\":{\"23\":1}}],[\"discussion\",{\"1\":{\"15\":1,\"20\":1,\"21\":1,\"23\":1}}],[\"directory\",{\"1\":{\"20\":1,\"33\":1}}],[\"didn\",{\"1\":{\"15\":2}}],[\"did\",{\"1\":{\"15\":1}}],[\"diagram\",{\"0\":{\"3\":1}}],[\"ag\",{\"1\":{\"46\":2}}],[\"again\",{\"1\":{\"43\":1}}],[\"aware\",{\"1\":{\"39\":2,\"41\":1}}],[\"at\",{\"1\":{\"38\":1,\"55\":1}}],[\"attached\",{\"1\":{\"19\":1}}],[\"ahead\",{\"1\":{\"37\":1}}],[\"ahk\",{\"1\":{\"34\":2}}],[\"apologies\",{\"1\":{\"37\":1}}],[\"appended\",{\"1\":{\"54\":1}}],[\"approach\",{\"1\":{\"39\":1}}],[\"appropriate\",{\"0\":{\"26\":1},\"1\":{\"17\":1,\"55\":1}}],[\"applied\",{\"1\":{\"38\":1}}],[\"applications\",{\"1\":{\"24\":2,\"31\":1}}],[\"application\",{\"1\":{\"11\":1,\"24\":1}}],[\"app\",{\"1\":{\"24\":2}}],[\"automatically\",{\"1\":{\"41\":1,\"55\":1}}],[\"autohotkey\",{\"1\":{\"34\":3}}],[\"author\",{\"1\":{\"33\":1}}],[\"about\",{\"1\":{\"41\":1}}],[\"above\",{\"1\":{\"15\":1,\"33\":1,\"38\":1,\"54\":1}}],[\"able\",{\"1\":{\"33\":1,\"38\":1,\"42\":1,\"44\":1}}],[\"affect\",{\"1\":{\"30\":1}}],[\"after\",{\"0\":{\"26\":1},\"1\":{\"12\":1,\"20\":1,\"21\":1,\"26\":1}}],[\"adapted\",{\"1\":{\"55\":1}}],[\"administrator\",{\"1\":{\"32\":1}}],[\"added\",{\"1\":{\"43\":1}}],[\"additional\",{\"0\":{\"33\":1}}],[\"add\",{\"0\":{\"27\":1,\"46\":1},\"1\":{\"27\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":2,\"54\":1,\"55\":1}}],[\"adoc\",{\"0\":{\"1\":1}}],[\"avoid\",{\"1\":{\"21\":1,\"34\":1}}],[\"also\",{\"1\":{\"20\":2,\"23\":1,\"40\":1,\"54\":1}}],[\"already\",{\"1\":{\"15\":1}}],[\"alts\",{\"1\":{\"40\":1}}],[\"alternative\",{\"1\":{\"13\":1}}],[\"alt\",{\"1\":{\"11\":1}}],[\"allows\",{\"1\":{\"34\":1}}],[\"allowed\",{\"0\":{\"28\":1},\"1\":{\"28\":1,\"54\":1}}],[\"all\",{\"1\":{\"7\":1,\"15\":1,\"20\":1,\"21\":1,\"38\":1}}],[\"a\",{\"0\":{\"40\":1,\"45\":1,\"48\":1,\"54\":1},\"1\":{\"9\":1,\"11\":1,\"12\":1,\"15\":10,\"20\":4,\"21\":3,\"23\":1,\"26\":4,\"28\":1,\"31\":1,\"32\":1,\"34\":2,\"37\":4,\"38\":6,\"39\":6,\"40\":1,\"41\":6,\"42\":13,\"43\":2}}],[\"ask\",{\"1\":{\"15\":1}}],[\"asterisk\",{\"1\":{\"11\":1}}],[\"as\",{\"1\":{\"8\":1,\"12\":2,\"20\":3,\"34\":1,\"37\":1,\"38\":1,\"42\":1,\"54\":2,\"55\":3}}],[\"asciidoc\",{\"1\":{\"1\":1}}],[\"asciidoctor\",{\"1\":{\"1\":1}}],[\"access\",{\"1\":{\"44\":1,\"54\":1}}],[\"accent\",{\"1\":{\"11\":1}}],[\"accurate\",{\"1\":{\"6\":1}}],[\"action\",{\"1\":{\"28\":4}}],[\"activate\",{\"1\":{\"24\":2}}],[\"act\",{\"1\":{\"7\":1}}],[\"an\",{\"0\":{\"39\":2,\"55\":1},\"1\":{\"8\":1,\"12\":1,\"15\":1,\"20\":3,\"37\":1,\"39\":1,\"42\":1,\"43\":2,\"54\":2}}],[\"andkbremap\",{\"1\":{\"15\":1}}],[\"and\",{\"0\":{\"15\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"46\":1,\"54\":1,\"55\":1},\"1\":{\"7\":2,\"9\":1,\"11\":1,\"12\":3,\"15\":3,\"20\":4,\"21\":1,\"24\":1,\"26\":1,\"28\":1,\"29\":1,\"33\":1,\"34\":3,\"37\":3,\"38\":1,\"40\":3,\"41\":4,\"42\":3,\"43\":1,\"44\":1,\"46\":1,\"55\":1}}],[\"anything\",{\"1\":{\"12\":1}}],[\"any\",{\"1\":{\"6\":1,\"20\":1}}],[\"archive\",{\"1\":{\"33\":1}}],[\"architectures\",{\"1\":{\"20\":1,\"21\":1}}],[\"arm64\",{\"1\":{\"26\":2}}],[\"arrows\",{\"1\":{\"11\":1}}],[\"args=\",{\"1\":{\"55\":1}}],[\"args\",{\"1\":{\"4\":1}}],[\"are\",{\"0\":{\"53\":1},\"1\":{\"1\":1,\"9\":1,\"12\":1,\"15\":2,\"19\":1,\"20\":4,\"21\":1,\"28\":1,\"33\":1,\"38\":1,\"39\":2,\"40\":5,\"42\":1}}],[\"faq\",{\"1\":{\"55\":1}}],[\"fake\",{\"1\":{\"8\":1}}],[\"future\",{\"1\":{\"40\":1,\"42\":1,\"43\":1}}],[\"fully\",{\"1\":{\"1\":1}}],[\"folder\",{\"1\":{\"33\":1,\"34\":1}}],[\"follow\",{\"1\":{\"21\":1,\"37\":1,\"44\":1}}],[\"following\",{\"0\":{\"49\":1,\"51\":1},\"1\":{\"20\":1,\"33\":1}}],[\"found\",{\"1\":{\"20\":1,\"33\":1,\"54\":1,\"56\":1}}],[\"format\",{\"0\":{\"42\":1},\"1\":{\"42\":1}}],[\"formerly\",{\"1\":{\"20\":1}}],[\"force\",{\"1\":{\"41\":1}}],[\"forbidden\",{\"1\":{\"28\":1}}],[\"forward\",{\"1\":{\"7\":1,\"11\":1}}],[\"for\",{\"0\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1},\"1\":{\"6\":2,\"7\":1,\"8\":2,\"12\":3,\"13\":1,\"15\":3,\"20\":4,\"21\":2,\"24\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":2,\"41\":2,\"42\":5,\"43\":2,\"53\":1,\"54\":2}}],[\"frequently\",{\"1\":{\"30\":1}}],[\"freedesktop\",{\"1\":{\"54\":1}}],[\"free\",{\"1\":{\"15\":1,\"37\":1}}],[\"from\",{\"1\":{\"1\":1,\"7\":1,\"20\":1,\"31\":1,\"33\":2,\"38\":1,\"55\":1}}],[\"fewer\",{\"1\":{\"40\":1}}],[\"feel\",{\"1\":{\"15\":1,\"37\":1}}],[\"features\",{\"1\":{\"14\":1,\"15\":2,\"19\":1}}],[\"feature\",{\"1\":{\"12\":1,\"22\":1,\"37\":1,\"38\":1}}],[\"fit\",{\"1\":{\"40\":1}}],[\"figure\",{\"1\":{\"39\":1}}],[\"first\",{\"1\":{\"24\":1,\"53\":1,\"54\":1}}],[\"fixes\",{\"1\":{\"20\":1}}],[\"fix\",{\"1\":{\"17\":1,\"20\":1}}],[\"fixable\",{\"1\":{\"15\":1}}],[\"file>`\",{\"1\":{\"21\":1,\"26\":1}}],[\"file>\",{\"1\":{\"20\":1}}],[\"file\",{\"0\":{\"19\":1,\"47\":1,\"48\":1},\"1\":{\"19\":1,\"20\":2,\"21\":1,\"26\":1,\"33\":2,\"34\":1,\"55\":1}}],[\"files\",{\"1\":{\"1\":1,\"20\":1}}],[\"fill\",{\"1\":{\"18\":1,\"35\":1}}],[\"filter\",{\"1\":{\"12\":2}}],[\"fine\",{\"1\":{\"6\":1}}],[\"turned\",{\"1\":{\"43\":1}}],[\"type=simple\",{\"1\":{\"54\":1}}],[\"types\",{\"1\":{\"40\":1}}],[\"type\",{\"1\":{\"40\":1,\"41\":1}}],[\"trigger\",{\"1\":{\"42\":1,\"50\":1}}],[\"trie\",{\"1\":{\"39\":2,\"41\":1,\"42\":1,\"43\":1}}],[\"translated\",{\"1\":{\"42\":1}}],[\"transformations\",{\"1\":{\"42\":1}}],[\"transformation\",{\"1\":{\"42\":3}}],[\"transformed\",{\"1\":{\"34\":1}}],[\"track\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"try\",{\"1\":{\"15\":1,\"43\":1}}],[\"text\",{\"1\":{\"55\":1}}],[\"termination\",{\"1\":{\"43\":1}}],[\"terminal\",{\"1\":{\"21\":1,\"24\":1,\"26\":1}}],[\"tested\",{\"1\":{\"19\":1}}],[\"two\",{\"1\":{\"20\":1,\"38\":1}}],[\"taken\",{\"1\":{\"55\":1}}],[\"target\",{\"1\":{\"54\":1}}],[\"tap\",{\"1\":{\"15\":3}}],[\"tapping\",{\"1\":{\"15\":1}}],[\"tab\",{\"1\":{\"11\":1}}],[\"thinking\",{\"1\":{\"43\":1}}],[\"think\",{\"1\":{\"33\":1,\"39\":1}}],[\"this\",{\"0\":{\"50\":1},\"1\":{\"12\":1,\"13\":1,\"14\":1,\"18\":1,\"19\":1,\"20\":4,\"21\":1,\"23\":2,\"24\":2,\"27\":1,\"28\":1,\"30\":2,\"31\":3,\"34\":1,\"35\":1,\"37\":2,\"38\":2,\"39\":1,\"40\":1,\"41\":3,\"42\":6,\"43\":1,\"44\":2,\"53\":1,\"54\":4}}],[\"those\",{\"1\":{\"33\":2}}],[\"thought\",{\"1\":{\"43\":1}}],[\"though\",{\"1\":{\"12\":1,\"15\":2,\"39\":1,\"40\":1}}],[\"through\",{\"1\":{\"23\":2}}],[\"thread\",{\"1\":{\"12\":2}}],[\"than\",{\"1\":{\"15\":1,\"31\":1,\"40\":1}}],[\"that\",{\"1\":{\"12\":2,\"15\":3,\"19\":1,\"20\":1,\"28\":1,\"31\":1,\"33\":2,\"34\":1,\"38\":1,\"39\":1,\"40\":3,\"41\":4,\"42\":7,\"43\":2,\"46\":1,\"55\":1}}],[\"then\",{\"1\":{\"24\":1,\"34\":3,\"54\":2,\"55\":1}}],[\"theconfiguration\",{\"1\":{\"15\":1}}],[\"thekeyberon\",{\"1\":{\"15\":1}}],[\"there\",{\"1\":{\"9\":1,\"28\":1,\"33\":1,\"34\":1,\"40\":3,\"42\":1}}],[\"them\",{\"1\":{\"7\":1,\"41\":1}}],[\"they\",{\"1\":{\"1\":1,\"12\":1,\"15\":1,\"41\":2,\"42\":2}}],[\"these\",{\"1\":{\"1\":1,\"31\":1,\"42\":1}}],[\"the\",{\"0\":{\"26\":1,\"32\":1,\"45\":1,\"46\":2,\"47\":2,\"49\":2,\"53\":1},\"1\":{\"1\":2,\"6\":2,\"9\":2,\"12\":5,\"13\":2,\"15\":4,\"17\":1,\"19\":5,\"20\":23,\"21\":2,\"24\":4,\"25\":1,\"26\":1,\"28\":6,\"30\":1,\"31\":5,\"32\":2,\"33\":9,\"34\":6,\"37\":2,\"38\":6,\"39\":8,\"40\":5,\"41\":7,\"42\":21,\"43\":6,\"44\":2,\"53\":1,\"54\":12,\"55\":2}}],[\"tcp\",{\"0\":{\"7\":1},\"1\":{\"6\":1}}],[\"t\",{\"1\":{\"6\":1,\"12\":2,\"15\":3,\"39\":1,\"40\":1,\"42\":1,\"55\":1}}],[\"tips\",{\"1\":{\"20\":1}}],[\"tilde\",{\"1\":{\"11\":1}}],[\"timeout\",{\"1\":{\"12\":1}}],[\"time\",{\"1\":{\"6\":1,\"37\":1,\"53\":1}}],[\"tick\",{\"1\":{\"6\":1}}],[\"topic\",{\"1\":{\"43\":1}}],[\"too\",{\"1\":{\"42\":1}}],[\"total\",{\"1\":{\"40\":1}}],[\"today\",{\"1\":{\"38\":2,\"39\":1,\"42\":2}}],[\"todo\",{\"1\":{\"17\":1,\"18\":1,\"35\":1}}],[\"to\",{\"0\":{\"1\":1,\"32\":1,\"46\":1,\"50\":1,\"54\":1,\"55\":1},\"1\":{\"1\":1,\"5\":1,\"6\":3,\"7\":1,\"9\":1,\"12\":11,\"15\":6,\"17\":1,\"19\":1,\"20\":9,\"21\":4,\"24\":3,\"26\":2,\"27\":2,\"28\":3,\"30\":1,\"31\":1,\"33\":4,\"34\":5,\"37\":6,\"38\":6,\"39\":7,\"40\":3,\"41\":2,\"42\":15,\"43\":1,\"44\":6,\"46\":1,\"53\":1,\"54\":6}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
